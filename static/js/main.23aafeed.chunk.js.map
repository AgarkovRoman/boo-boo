{"version":3,"sources":["pages/mainStylesForPages.module.scss","pages/components/AddTask/AddTask.module.scss","pages/components/Sidebar/Sidebar.module.scss","pages/HomePage/HomePage.module.scss","pages/components/Header/Header.module.scss","pages/components/TaskDate/TaskDate.module.scss","pages/components/IndividualProject/IndividualProject.module.scss","pages/components/AddProject/AddProject.module.scss","pages/components/ProjectOverlay/ProjectOverlay.module.scss","pages/components/Task/Task.module.scss","common/UI/SmallModalWindow/SmallModalWindow.module.scss","common/UI/Checkbox/Checkbox.module.scss","common/UI/Button/Button.module.scss","pages/SignIn/SignIn.module.scss","common/UI/Logo/Logo.module.scss","pages/SignUp/SignUp.module.scss","pages/components/Content/Content.module.scss","common/UI/TasksCounter/TaskCounter.module.scss","constants/routes.ts","pages/HomePage/logo.svg","common/UI/Logo/Logo.tsx","redux/auth/auth-reducer.ts","api/api.ts","pages/SignIn/SignIn.tsx","pages/SignUp/SignUp.tsx","helpers/routes.js","pages/HomePage/HomePage.tsx","pages/components/ProjectOverlay/ProjectOverlay.tsx","pages/components/TaskDate/TaskDate.tsx","common/UI/Button/Button.tsx","redux/projects/projects-selectors.ts","pages/components/AddTask/AddTask.tsx","pages/components/Header/Header.tsx","constants/defaultProjects.ts","redux/projects/projects-reducer.ts","common/UI/SmallModalWindow/SmallModalWindow.tsx","pages/components/IndividualProject/IndividualProject.tsx","hooks/useOutSideClick.ts","pages/components/Projects/Projects.tsx","pages/components/AddProject/AddProject.tsx","common/UI/TasksCounter/TasksCounter.tsx","pages/components/Sidebar/Sidebar.tsx","constants/collatedTasks.ts","helpers/helpers.ts","common/UI/Checkbox/Checkbox.tsx","pages/components/Task/Task.tsx","pages/components/Tasks/Tasks.tsx","pages/components/Content/Content.tsx","pages/BooBoo/BooBoo.tsx","routes/AppRouter.tsx","redux/auth/auth-selectors.ts","App.tsx","redux/redux-store.ts","index.js"],"names":["module","exports","HOME","APP","SIGN_UP","SIGN_IN","Logo","to","ROUTES","data-testid","className","classes","logo","src","alt","height","width","authSlice","createSlice","name","initialState","user","userId","userEmail","userName","reducers","setAuthUser","state","action","payload","actions","authMeTC","dispatch","a","userFromLocalStorage","localStorage","getItem","length","userFromLocalStorageParse","JSON","parse","id","email","BASE_URL","prepareAuthorizationHeaders","headers","set","authUser","accessToken","authAPI","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","build","logOut","mutation","query","token","url","method","body","signIn","login","password","signUp","projectsAPI","prepareHeaders","getAllProjectsById","deleteProject","addProject","project","tasksAPI","getAllTasksById","addTask","task","updateTaskById","taskId","deleteTask","Header","mainClasses","header","SignIn","useForm","register","handleSubmit","errors","formState","useSignInMutation","useDispatch","onSubmit","useCallback","then","res","setItem","stringify","data","useEffect","document","title","mainWrapper","wrapper","main","formBox","form","label","type","placeholder","pattern","value","message","required","errorMessage","button","footerParagraph","footerLink","ROUTER","SignUp","useSignUpMutation","console","log","minLength","isUserExist","IsUserRedirect","loggedInPath","children","rest","render","pathname","ProtectedRoute","location","from","HomePage","homePageBody","navList","navListUl","navListElement","navListElement__mainColored","headerTitle","getStartedContainer","getStarted","manImage","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","projects","useGetAllProjectsByIdQuery","projectOverlay","overlayList","map","listItem","listElement","onClick","onKeyDown","e","key","role","tabIndex","aria-label","TaskDate","setShowTaskDate","setTaskDate","showTaskDate","taskDate","list","listItemElement","dayjs","format","add","Button","dataTestId","color","mainBtn","getActiveProject","activeProject","AddTask","showAddTaskMain","showShouldMain","showQuickAddTask","setShowQuickAddTask","useState","taskName","setTaskName","showAddTaskInput","setShowAddTaskInput","selectedProject","useSelector","useAddTaskMutation","addTaskHandler","addTaskResponse","isLoading","refetch","useGetAllTasksByIdQuery","getTaskObject","projectId","collatedDate","description","date","archived","overlay","shallow","plus","text","undefined","cancelX","taskProjectOverlay","taskDateOverlay","content","onChange","target","buttonCancel","shouldShowMain","setShouldShowMain","useLogOutMutation","signOutHandler","refreshToken","success","removeItem","navigation","burger","headerBtn","settings","settingsItem","INBOX","TODAY","NEXT_7","projectSlice","setActiveProject","SmallModalWindow","onClose","modal","buttons","IndividualProject","showConfirm","setShowConfirm","deleteModalRef","useRef","selectProject","useDeleteProjectMutation","deleteProjectResponse","toggleDeleteModal","ref","display","callback","handleClick","current","contains","addEventListener","removeEventListener","useOutsideClick","active","projectAction","projectItem","dot","delete","deleteModal","Projects","uuid","AddProject","shouldShow","show","setShow","useAddProjectMutation","addProjectResponse","input","TasksCounter","count","counter","Sidebar","showProjects","setShowProjects","tasks","inboxTaskCount","filter","elem","todayTaskCount","next7TaskCount","sidebar","generic","taskCounterContainer","middle","iconChevron","hiddenProject","collatedTasks","collatedTasksExist","find","Checkbox","archiveTask","mouseEnter","setMouseEnter","checked","setChecked","handleArchiveTask","setTimeout","checkboxHolder","checkbox","checkboxChecked","onMouseEnter","onMouseOver","onMouseLeave","Task","isModalDisplay","setIsModalDisplay","useDeleteTaskMutation","isDeleteTaskLoading","deleteTaskResponse","useUpdateTaskByIdMutation","updateTask","isUpdateTaskLoading","updateTaskResponse","taskBody","kebab","Tasks","selectedProjectTasks","setSelectedProjectTasks","projectName","object","getTitle","getCollatedTitle","createProjectName","projectTasks","selectProjectId","Content","BooBoo","AppRouter","auth","getUser","path","exact","App","store","configureStore","reducer","authReducer","projectsReducer","middleware","getDefaultMiddleware","concat","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.23aafeed.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"mainStylesForPages_mainWrapper__3mWTf\",\"header\":\"mainStylesForPages_header__2L5tl\",\"main\":\"mainStylesForPages_main__2lAMh\",\"formBox\":\"mainStylesForPages_formBox__26AGZ\",\"title\":\"mainStylesForPages_title__2Vs5s\",\"form\":\"mainStylesForPages_form__15MAZ\",\"button\":\"mainStylesForPages_button__1zZ-w\",\"footerParagraph\":\"mainStylesForPages_footerParagraph__vavVR\",\"footerLink\":\"mainStylesForPages_footerLink__3_n8F\",\"errorMessage\":\"mainStylesForPages_errorMessage__2CUpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTask\":\"AddTask_addTask__2Ugjm\",\"main\":\"AddTask_main__1bUQA\",\"shallow\":\"AddTask_shallow__3pa2z\",\"plus\":\"AddTask_plus__2lw5V\",\"text\":\"AddTask_text__2_gNQ\",\"overlay\":\"AddTask_overlay__oXkVy\",\"header\":\"AddTask_header__1wYDu\",\"title\":\"AddTask_title__2E6ow\",\"cancelX\":\"AddTask_cancelX__2D_fA\",\"content\":\"AddTask_content__uA7ee\",\"buttonCancel\":\"AddTask_buttonCancel__1XUXG\",\"project\":\"AddTask_project__1r-PM\",\"date\":\"AddTask_date__1tPWl\",\"taskDateOverlay\":\"AddTask_taskDateOverlay__1SLjF\",\"taskProjectOverlay\":\"AddTask_taskProjectOverlay__1ybxY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__3cG75\",\"middle\":\"Sidebar_middle__N1k6s\",\"iconChevron\":\"Sidebar_iconChevron__3Ds2I\",\"hiddenProject\":\"Sidebar_hiddenProject__jDQIo\",\"generic\":\"Sidebar_generic__3puY9\",\"taskCounterContainer\":\"Sidebar_taskCounterContainer__3s1Zr\",\"active\":\"Sidebar_active__2p_6l\",\"projects\":\"Sidebar_projects__NV7FY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homePageBody\":\"HomePage_homePageBody__1soNb\",\"header\":\"HomePage_header__ae_0k\",\"navList\":\"HomePage_navList__2VpEI\",\"navListUl\":\"HomePage_navListUl__QrhXn\",\"navListElement\":\"HomePage_navListElement__2cQFc\",\"navListElement__mainColored\":\"HomePage_navListElement__mainColored__2yK9w\",\"headerTitle\":\"HomePage_headerTitle__24we4\",\"getStartedContainer\":\"HomePage_getStartedContainer__2U2sO\",\"getStarted\":\"HomePage_getStarted__3kN_G\",\"manImage\":\"HomePage_manImage__2E1QB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1kC_1\",\"headerBtn\":\"Header_headerBtn__1FQ94\",\"navigation\":\"Header_navigation__1F-n-\",\"burger\":\"Header_burger__2igPP\",\"settings\":\"Header_settings__2Fx6A\",\"settingsItem\":\"Header_settingsItem__1Exfk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskDate\":\"TaskDate_taskDate__3kxT4\",\"list\":\"TaskDate_list__2aUbJ\",\"listItem\":\"TaskDate_listItem__1RylB\",\"listItemElement\":\"TaskDate_listItemElement__21kk0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"IndividualProject_project__2egx8\",\"active\":\"IndividualProject_active__2AD-w\",\"projectAction\":\"IndividualProject_projectAction__xnBbi\",\"projectItem\":\"IndividualProject_projectItem__bZeOC\",\"dot\":\"IndividualProject_dot__2Yp4I\",\"delete\":\"IndividualProject_delete__24kxa\",\"deleteModal\":\"IndividualProject_deleteModal__1ec4X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addProject\":\"AddProject_addProject__4r_sS\",\"wrapper\":\"AddProject_wrapper__3tKyv\",\"plus\":\"AddProject_plus__3VQvq\",\"text\":\"AddProject_text__3EbNs\",\"input\":\"AddProject_input__3VuJo\",\"name\":\"AddProject_name__2L3qv\",\"buttons\":\"AddProject_buttons__g7v2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectOverlay\":\"ProjectOverlay_projectOverlay__1F7Py\",\"overlayList\":\"ProjectOverlay_overlayList__3QaBQ\",\"listItem\":\"ProjectOverlay_listItem__3IjJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskBody\":\"Task_taskBody__Vbd0B\",\"name\":\"Task_name__2X5qg\",\"kebab\":\"Task_kebab__3ioTP\",\"modal\":\"Task_modal___ObYf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"SmallModalWindow_modal__S1KqR\",\"title\":\"SmallModalWindow_title__4mvRU\",\"buttons\":\"SmallModalWindow_buttons__1AH4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxHolder\":\"Checkbox_checkboxHolder__2PH8Y\",\"checkbox\":\"Checkbox_checkbox__1JiEP\",\"checkboxChecked\":\"Checkbox_checkboxChecked__1sgu1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBtn\":\"Button_mainBtn__1tTlS\",\"primary\":\"Button_primary__3kWYq\",\"transparent\":\"Button_transparent__12jVQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SignIn_wrapper__1wYbs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__32NGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SignUp_wrapper__TMV63\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__1r29_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"TaskCounter_counter__3mcJc\"};","export const HOME = '/boo-boo'\nexport const APP = '/app'\nexport const SIGN_UP = '/signup'\nexport const SIGN_IN = '/signin'\n","export default __webpack_public_path__ + \"static/media/logo.f91ee324.svg\";","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport * as ROUTES from '../../../constants/routes'\nimport classes from './Logo.module.scss'\nimport logo from '../../../pages/HomePage/logo.svg'\n\nexport const Logo: React.FC = () => (\n  <NavLink to={ROUTES.HOME} data-testid=\"logo\">\n    <img className={classes.logo} src={logo} alt=\"Boo-Boo logo\" height=\"28\" width=\"120\" />\n  </NavLink>\n)\n","import { Action, createSlice } from '@reduxjs/toolkit'\nimport { ThunkAction } from 'redux-thunk'\nimport { AuthI, AuthStateI, UserIServer } from './auth-types'\n\nexport const initialState: AuthI = {\n  user: {\n    userId: '',\n    userEmail: '',\n    userName: '',\n  },\n}\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setAuthUser(state, action) {\n      state.user = action.payload\n    },\n  },\n})\n\nexport const { setAuthUser } = authSlice.actions\nexport default authSlice.reducer\n\n/* ThunkCreators */\nexport const authMeTC = (): ThunkAction<void, AuthStateI, unknown, Action> => async (dispatch) => {\n  const userFromLocalStorage: string | null = localStorage.getItem('authUser')\n  if (typeof userFromLocalStorage === 'string' && userFromLocalStorage.length > 0) {\n    const userFromLocalStorageParse: UserIServer = JSON.parse(userFromLocalStorage)\n    const { id: userId, email: userEmail = '', name: userName = '' } = userFromLocalStorageParse\n    dispatch(setAuthUser({ userId, userEmail, userName }))\n  }\n  // else {\n  //   await authAPI.authMe((user: FirebaseUserI) => {\n  //     if (user) {\n  //       const { uid, email, displayName }: FirebaseUserI = user\n  //       const authUser = { userId: uid, userEmail: email, userName: displayName }\n  //       dispatch(setAuthUserData(authUser))\n  //       localStorage.setItem('authUser', JSON.stringify(authUser))\n  //       return authUser\n  //     }\n  //     return { userId: '', userEmail: '', userName: '' }\n  //   })\n  // }\n}\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { createApi, fetchBaseQuery } from '@reduxjs/toolkit/dist/query/react'\nimport { CreateTaskI, DeleteTaskI, TaskI } from '../redux/tasks/tasks-types'\nimport { CreateProjectI, DeleteProjectI, ProjectI } from '../redux/projects/projects-types'\nimport { LogoutResponseI, SignInI, UserIServer } from '../redux/auth/auth-types'\n\nconst BASE_URL = 'https://boo-boo-server.herokuapp.com/api/'\n// const BASE_URL = 'http://localhost:8080/api/'\n\nfunction prepareAuthorizationHeaders(headers: Headers): Headers {\n  headers.set('Access-Control-Allow-Origin', '*')\n  const authUser = JSON.parse(localStorage.getItem('authUser') || '')\n  if (authUser) {\n    headers.set('authorization', `Bearer ${authUser?.accessToken}`)\n  }\n  return headers\n}\n\nexport const authAPI = createApi({\n  reducerPath: 'authAPI',\n  baseQuery: fetchBaseQuery({\n    baseUrl: BASE_URL,\n  }),\n  endpoints: (build) => ({\n    logOut: build.mutation<LogoutResponseI, string>({\n      query: (token) => ({\n        url: '/auth/logout/',\n        method: 'POST',\n        body: token,\n      }),\n    }),\n    signIn: build.mutation<UserIServer, SignInI>({\n      query: ({ login, password }) => ({\n        url: '/auth/login/',\n        method: 'POST',\n        body: { login, password },\n      }),\n    }),\n    signUp: build.mutation<UserIServer, SignInI>({\n      query: ({ login, password }) => ({\n        url: '/auth/registration/',\n        method: 'POST',\n        body: { login, password },\n      }),\n    }),\n  }),\n})\n\nexport const projectsAPI = createApi({\n  reducerPath: 'projectsAPI',\n  baseQuery: fetchBaseQuery({\n    baseUrl: BASE_URL,\n    prepareHeaders: prepareAuthorizationHeaders,\n  }),\n  endpoints: (build) => ({\n    getAllProjectsById: build.query<ProjectI[], string>({\n      query: () => ({\n        url: '/project/byUser',\n      }),\n    }),\n    deleteProject: build.mutation<DeleteProjectI, string>({\n      query: (id) => ({\n        url: `/project/${id}`,\n        method: 'DELETE',\n      }),\n    }),\n    addProject: build.mutation<ProjectI, CreateProjectI>({\n      query: (project) => ({\n        url: '/project/create',\n        method: 'POST',\n        body: project,\n      }),\n    }),\n  }),\n})\n\ntype UpdateTaskById = {\n  taskId: string\n  task: CreateTaskI\n}\n\nexport const tasksAPI = createApi({\n  reducerPath: 'tasksAPI',\n  baseQuery: fetchBaseQuery({\n    baseUrl: BASE_URL,\n    prepareHeaders: prepareAuthorizationHeaders,\n  }),\n  endpoints: (build) => ({\n    getAllTasksById: build.query<TaskI[], string>({\n      query: () => ({\n        url: '/task/byUser',\n      }),\n    }),\n    addTask: build.mutation<TaskI, CreateTaskI>({\n      query: (task) => ({\n        url: '/task/create',\n        method: 'POST',\n        body: task,\n      }),\n    }),\n    updateTaskById: build.mutation<TaskI, UpdateTaskById>({\n      query: ({ taskId, task }) => ({\n        url: `/task/${taskId}`,\n        method: 'PATCH',\n        body: task,\n      }),\n    }),\n    deleteTask: build.mutation<DeleteTaskI, string>({\n      query: (taskId) => ({\n        url: `/task/${taskId}`,\n        method: 'DELETE',\n      }),\n    }),\n  }),\n})\n","import React, { useCallback, useEffect } from 'react'\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport { NavLink } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport classes from './SignIn.module.scss'\nimport mainClasses from '../mainStylesForPages.module.scss'\nimport * as ROUTER from '../../constants/routes'\nimport { Logo } from '../../common/UI/Logo/Logo'\nimport { authMeTC } from '../../redux/auth/auth-reducer'\nimport { authAPI } from '../../api/api'\n\ntype FormData = {\n  email: string\n  password: string\n}\n\nexport const Header = () => (\n  <header className={mainClasses.header} data-testid=\"header\">\n    <Logo />\n  </header>\n)\n\nexport const SignIn = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormData>()\n\n  const [signIn] = authAPI.useSignInMutation()\n\n  const dispatch = useDispatch()\n\n  const onSubmit: SubmitHandler<FormData> = useCallback(\n    ({ email: login, password }: FormData) =>\n      signIn({ login, password }).then((res) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        localStorage.setItem('authUser', JSON.stringify(res.data))\n        dispatch(authMeTC())\n      }),\n    [dispatch]\n  )\n\n  useEffect(() => {\n    document.title = `BOO—BOO: Sign In`\n  })\n\n  return (\n    <div className={mainClasses.mainWrapper}>\n      <div className={classes.wrapper}>\n        <Header />\n        <div className={mainClasses.main}>\n          <div className={mainClasses.formBox}>\n            <h3 className={mainClasses.title}>Sign In</h3>\n\n            <form className={mainClasses.form} onSubmit={handleSubmit(onSubmit)}>\n              <label className={mainClasses.label}>\n                Email\n                <input\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  {...register('email', {\n                    pattern: { value: /^\\S+@\\S+$/i, message: 'Incorrect email' },\n                    required: 'This input is required.',\n                  })}\n                />\n              </label>\n              <div>\n                {errors?.email && (\n                  <p className={mainClasses.errorMessage}>{errors?.email.message}</p>\n                )}\n              </div>\n\n              <label className={mainClasses.label}>\n                Password\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  {...register('password', {\n                    required: 'This input is required.',\n                  })}\n                />\n              </label>\n              <div>\n                {errors?.password && (\n                  <p className={mainClasses.errorMessage}>{errors?.password.message}</p>\n                )}\n              </div>\n\n              <input\n                className={mainClasses.button}\n                data-testid=\"sign-in\"\n                value=\"Sign In\"\n                type=\"submit\"\n              />\n            </form>\n\n            <p className={mainClasses.footerParagraph}>\n              Don't have an account yet?\n              <NavLink className={mainClasses.footerLink} to={ROUTER.SIGN_UP}>\n                Sign up now\n              </NavLink>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useCallback, useEffect } from 'react'\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport { NavLink } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport classes from './SignUp.module.scss'\nimport mainClasses from '../mainStylesForPages.module.scss'\nimport * as ROUTER from '../../constants/routes'\nimport { authMeTC } from '../../redux/auth/auth-reducer'\nimport { Header } from '../SignIn/SignIn'\nimport { authAPI } from '../../api/api'\n\ntype FormData = {\n  name: string\n  email: string\n  password: string\n  // repeatPassword: string\n}\n\nexport const SignUp = () => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormData>()\n\n  const dispatch = useDispatch()\n  const [signUp] = authAPI.useSignUpMutation()\n\n  const onSubmit: SubmitHandler<FormData> = useCallback(\n    ({ email: login, password }: FormData) =>\n      signUp({ login, password }).then((res) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        localStorage.setItem('authUser', JSON.stringify(res.data))\n        dispatch(authMeTC())\n      }),\n    [dispatch]\n  )\n\n  console.log('SignUp errors: ', errors)\n\n  useEffect(() => {\n    document.title = `BOO—BOO: SignUp`\n  })\n\n  return (\n    <div className={mainClasses.mainWrapper}>\n      <div className={classes.wrapper}>\n        <Header />\n        <div className={mainClasses.main}>\n          <div className={mainClasses.formBox}>\n            <h3 className={mainClasses.title}>Sign Up</h3>\n\n            <form className={mainClasses.form} onSubmit={handleSubmit(onSubmit)}>\n              {/* <label> */}\n              {/*  Name */}\n              {/*  <input */}\n              {/*    type=\"text\" */}\n              {/*    placeholder=\"Name\" */}\n              {/*    name=\"Name\" */}\n              {/*    ref={register({ required: true })} */}\n              {/*  /> */}\n              {/*  /!* {errors.Email && <p>Require field</p>} *!/ */}\n              {/* </label> */}\n              <label className={mainClasses.label}>\n                Email\n                <input\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  {...register('email', {\n                    pattern: { value: /^\\S+@\\S+$/i, message: 'Incorrect email' },\n                    required: 'This input is required.',\n                  })}\n                />\n              </label>\n              <div>\n                {errors?.email && (\n                  <p className={mainClasses.errorMessage}>{errors?.email.message}</p>\n                )}\n              </div>\n\n              <label className={mainClasses.label}>\n                Password\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  {...register('password', {\n                    minLength: {\n                      value: 6,\n                      message: 'Password length should exceed 6 characters',\n                    },\n                    required: 'This input is required.',\n                  })}\n                />\n              </label>\n              <div>\n                {errors?.password && (\n                  <p className={mainClasses.errorMessage}>{errors?.password.message}</p>\n                )}\n              </div>\n\n              {/* <label>Repeat Password */}\n              {/*    <input type=\"password\" placeholder=\"Repeat Password\" name=\"RepeatPassword\" */}\n              {/*           ref={register({required: true, minLength: 6})}/> */}\n              {/*    /!*{errors.Password && <p>Require field</p>}*!/ */}\n              {/* </label> */}\n\n              <button className={mainClasses.button} data-testid=\"sign-up\" type=\"submit\">\n                Sign Up\n              </button>\n            </form>\n\n            <p className={mainClasses.footerParagraph}>\n              Already have an account?\n              <NavLink className={mainClasses.footerLink} to={ROUTER.SIGN_IN}>\n                Sign in now\n              </NavLink>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport * as ROUTES from '../constants/routes'\n\nconst isUserExist = (user) => user.userId && user.userId.length > 0\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function IsUserRedirect({ user, loggedInPath, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (isUserExist(user)) {\n          return <Redirect to={{ pathname: loggedInPath }} />\n        }\n        if (!isUserExist(user)) {\n          return children\n        }\n        return null\n      }}\n    />\n  )\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function ProtectedRoute({ user, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (isUserExist(user)) {\n          return children\n        }\n        if (!isUserExist(user)) {\n          return (\n            <Redirect\n              to={{\n                pathname: ROUTES.SIGN_IN,\n                state: { from: location },\n              }}\n            />\n          )\n        }\n        return null\n      }}\n    />\n  )\n}\n","import React, { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport classes from './HomePage.module.scss'\nimport * as ROUTES from '../../constants/routes'\nimport mainClasses from '../mainStylesForPages.module.scss'\nimport { Logo } from '../../common/UI/Logo/Logo'\n\nexport const HomePage: React.FC = () => {\n  useEffect(() => {\n    document.title = `BOO—BOO: Home`\n  })\n\n  return (\n    <div className={mainClasses.mainWrapper} data-testid=\"home-page\">\n      <div className={classes.homePageBody}>\n        <header className={classes.header}>\n          <Logo />\n          <nav className={classes.navList}>\n            <ul className={classes.navListUl}>\n              <li className={classes.navListElement}>\n                <NavLink to={ROUTES.SIGN_IN}>Sign In</NavLink>\n              </li>\n              <li className={`${classes.navListElement} ${classes.navListElement__mainColored}`}>\n                <NavLink to={ROUTES.SIGN_UP}>Sign Up</NavLink>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <div>\n          <h1 className={classes.headerTitle}>{`Keep an eye\\n on your tasks.`}</h1>\n          <div className={classes.getStartedContainer}>\n            <NavLink className={classes.getStarted} to={ROUTES.SIGN_IN}>\n              Get started\n            </NavLink>\n          </div>\n        </div>\n\n        <div className={classes.manImage} />\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport classes from './ProjectOverlay.module.scss'\nimport { projectsAPI } from '../../../api/api'\n\ninterface ProjectOverlayPropsI {\n  setProject: (value: string) => void\n  showProjectOverlay: boolean\n  setShowProjectOverlay: (value: boolean) => void\n}\n\nexport const ProjectOverlay: React.FC<ProjectOverlayPropsI> = ({\n  setProject,\n  showProjectOverlay,\n  setShowProjectOverlay,\n}) => {\n  const { data: projects } = projectsAPI.useGetAllProjectsByIdQuery('')\n\n  return (\n    <>\n      {projects && showProjectOverlay && (\n        <div className={classes.projectOverlay} data-testid=\"project-overlay\">\n          <ul className={classes.overlayList}>\n            {projects.map((project) => (\n              <li className={classes.listItem} key={project.id}>\n                <div\n                  className={classes.listElement}\n                  data-testid=\"project-overlay-action\"\n                  onClick={() => {\n                    setProject(project.id)\n                    setShowProjectOverlay(false)\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') {\n                      setProject(project.id)\n                      setShowProjectOverlay(false)\n                    }\n                  }}\n                  role=\"button\"\n                  tabIndex={0}\n                  aria-label=\"Select the task project\"\n                >\n                  {project.name}\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport dayjs from 'dayjs'\nimport { FaRegPaperPlane, FaSpaceShuttle, FaSun } from 'react-icons/fa'\nimport classes from './TaskDate.module.scss'\n\ninterface TaskDatePropsI {\n  setShowTaskDate: (value: boolean) => void\n  setTaskDate: (value: string) => void\n  showTaskDate: boolean\n}\n\nexport const TaskDate: React.FC<TaskDatePropsI> = ({\n  setShowTaskDate,\n  setTaskDate,\n  showTaskDate,\n}) => (\n  <>\n    {showTaskDate && (\n      <div className={classes.taskDate} data-testid=\"task-date-overlay\">\n        <ul className={classes.list}>\n          <li className={classes.listItem}>\n            <div\n              className={classes.listItemElement}\n              aria-label=\"Select today as the task date\"\n              onClick={() => {\n                setShowTaskDate(false)\n                setTaskDate(dayjs().format('DD/MM/YYYY'))\n              }}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  setShowTaskDate(false)\n                  setTaskDate(dayjs().format('DD/MM/YYYY'))\n                }\n              }}\n              role=\"button\"\n              data-testid=\"task-date-today\"\n              tabIndex={0}\n            >\n              <span>\n                <FaSpaceShuttle />\n              </span>\n              <span>Today</span>\n            </div>\n          </li>\n\n          <li className={classes.listItem}>\n            <div\n              className={classes.listItemElement}\n              aria-label=\"Select tomorrow as the task date\"\n              onClick={() => {\n                setShowTaskDate(false)\n                setTaskDate(dayjs().add(1, 'day').format('DD/MM/YYYY'))\n              }}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  setShowTaskDate(false)\n                  setTaskDate(dayjs().add(1, 'day').format('DD/MM/YYYY'))\n                }\n              }}\n              role=\"button\"\n              tabIndex={0}\n              data-testid=\"task-date-tomorrow\"\n            >\n              <span>\n                <FaSun />\n              </span>\n              <span>Tomorrow</span>\n            </div>\n          </li>\n\n          <li className={classes.listItem}>\n            <div\n              className={classes.listItemElement}\n              aria-label=\"Select next week as the task date\"\n              onClick={() => {\n                setShowTaskDate(false)\n                setTaskDate(dayjs().add(7, 'day').format('DD/MM/YYYY'))\n              }}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  setShowTaskDate(false)\n                  setTaskDate(dayjs().add(7, 'day').format('DD/MM/YYYY'))\n                }\n              }}\n              role=\"button\"\n              tabIndex={0}\n              data-testid=\"task-date-next-week\"\n            >\n              <span>\n                <FaRegPaperPlane />\n              </span>\n              <span>Next week</span>\n            </div>\n          </li>\n        </ul>\n      </div>\n    )}\n  </>\n)\n","import React from 'react'\nimport classes from './Button.module.scss'\nimport { ButtonPropsI } from './index'\n\nexport const Button: React.FC<ButtonPropsI> = ({ onClick, label, dataTestId, color }) => (\n  <button\n    className={`${classes.mainBtn} ${classes[color]}`}\n    type=\"button\"\n    onClick={() => onClick()}\n    data-testid={dataTestId}\n  >\n    {label}\n  </button>\n)\n","import { ProjectsStateI } from './projects-types'\n\nexport const getActiveProject = (state: ProjectsStateI): string => state.projects.activeProject\n","import React, { useEffect, useState } from 'react'\nimport { FaRegListAlt, FaRegCalendarAlt, FaRegTimesCircle } from 'react-icons/fa'\nimport dayjs from 'dayjs'\nimport { useSelector } from 'react-redux'\nimport { VscAdd } from 'react-icons/vsc'\nimport classes from './AddTask.module.scss'\nimport { ProjectOverlay } from '../ProjectOverlay/ProjectOverlay'\nimport { TaskDate } from '../TaskDate/TaskDate'\nimport { Button } from '../../../common/UI/Button/Button'\nimport { getActiveProject } from '../../../redux/projects/projects-selectors'\nimport { ProjectsStateI } from '../../../redux/projects/projects-types'\nimport { tasksAPI } from '../../../api/api'\n\ninterface AddTaskPropsI {\n  showAddTaskMain?: boolean\n  showShouldMain?: boolean\n  showQuickAddTask?: boolean\n  setShowQuickAddTask?: (value: boolean) => void\n}\n\nexport const AddTask: React.FC<AddTaskPropsI> = ({\n  showAddTaskMain = true,\n  showShouldMain = false,\n  showQuickAddTask = false,\n  setShowQuickAddTask,\n}) => {\n  const [taskName, setTaskName] = useState<string>('')\n  const [taskDate, setTaskDate] = useState<string>('')\n  const [project, setProject] = useState<string>('')\n  const [showAddTaskInput, setShowAddTaskInput] = useState<boolean>(showShouldMain)\n  const [showProjectOverlay, setShowProjectOverlay] = useState<boolean>(false)\n  const [showTaskDate, setShowTaskDate] = useState<boolean>(false)\n\n  const selectedProject = useSelector((state: ProjectsStateI) => getActiveProject(state))\n  const [addTaskHandler, { data: addTaskResponse, isLoading }] = tasksAPI.useAddTaskMutation()\n  const { refetch } = tasksAPI.useGetAllTasksByIdQuery('')\n\n  const getTaskObject = () => {\n    const projectId = project || selectedProject\n\n    let collatedDate = ''\n    if (projectId === 'TODAY') {\n      collatedDate = dayjs().format('DD/MM/YYYY')\n    } else if (projectId === 'NEXT_7') {\n      collatedDate = dayjs().add(7, 'day').format('DD/MM/YYYY')\n    }\n\n    return (\n      taskName &&\n      projectId &&\n      addTaskHandler({\n        name: taskName,\n        description: '',\n        date: collatedDate || taskDate,\n        archived: false,\n        projectId,\n      })\n    )\n  }\n\n  const addTask = () => {\n    setTaskName('')\n    setProject('')\n    setShowAddTaskInput(false)\n    setShowProjectOverlay(false)\n\n    return showQuickAddTask && setShowQuickAddTask\n      ? getTaskObject() && setShowQuickAddTask(false)\n      : getTaskObject()\n  }\n\n  useEffect(() => {\n    if (!isLoading && addTaskResponse) {\n      refetch()\n    }\n  }, [isLoading, addTaskResponse])\n  return (\n    <div\n      className={showQuickAddTask ? classes.overlay : classes.addTask}\n      data-testid=\"add-task-comp\"\n    >\n      {showAddTaskMain && !showAddTaskInput && (\n        <div\n          className={classes.shallow}\n          data-testid=\"show-main-action\"\n          onClick={() => setShowAddTaskInput(!showAddTaskInput)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') setShowAddTaskInput(!showAddTaskInput)\n          }}\n          tabIndex={0}\n          aria-label=\"Add task\"\n          role=\"button\"\n        >\n          <span className={classes.plus}>\n            <VscAdd />\n          </span>\n          <span className={classes.text}>Add Task</span>\n        </div>\n      )}\n\n      {(showAddTaskInput || showQuickAddTask) && (\n        <div className={classes.main} data-testid=\"add-task-main\">\n          {/* Quick Add Task */}\n          {showQuickAddTask !== undefined && setShowQuickAddTask !== undefined && (\n            <>\n              <div data-testid=\"quick-add-task\">\n                <h2 className={classes.title}>Quick Add Task</h2>\n                <span\n                  className={classes.cancelX}\n                  data-testid=\"add-task-quick-cancel\"\n                  aria-label=\"Cancel adding task\"\n                  onClick={() => {\n                    setTaskName('')\n                    setShowAddTaskInput(false)\n                    setShowProjectOverlay(false)\n                    setShowQuickAddTask(false)\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') {\n                      setTaskName('')\n                      setShowAddTaskInput(false)\n                      setShowProjectOverlay(false)\n                      setShowQuickAddTask(false)\n                    }\n                  }}\n                  tabIndex={0}\n                  role=\"button\"\n                >\n                  <FaRegTimesCircle />\n                </span>\n              </div>\n            </>\n          )}\n          <div className={classes.taskProjectOverlay}>\n            <ProjectOverlay\n              setProject={setProject}\n              showProjectOverlay={showProjectOverlay}\n              setShowProjectOverlay={setShowProjectOverlay}\n            />\n          </div>\n          <div className={classes.taskDateOverlay}>\n            <TaskDate\n              setTaskDate={setTaskDate}\n              showTaskDate={showTaskDate}\n              setShowTaskDate={setShowTaskDate}\n            />\n          </div>\n          <input\n            className={classes.content}\n            aria-label=\"Enter your task\"\n            data-testid=\"add-task-content\"\n            type=\"text\"\n            value={taskName}\n            onChange={(e) => setTaskName(e.target.value)}\n          />\n          <Button\n            onClick={() => addTask()}\n            label=\"Add Task\"\n            color=\"primary\"\n            dataTestId=\"add-task\"\n          />\n\n          {!showQuickAddTask && (\n            <span className={classes.buttonCancel}>\n              <Button\n                onClick={() => {\n                  setTaskName('')\n                  setShowAddTaskInput(false)\n                  setShowProjectOverlay(false)\n                }}\n                label=\"Cancel\"\n                color=\"transparent\"\n                dataTestId=\"add-task-main-cancel\"\n              />\n            </span>\n          )}\n\n          <span\n            className={classes.project}\n            data-testid=\"show-project-overlay\"\n            onClick={() => setShowProjectOverlay(!showProjectOverlay)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') setShowProjectOverlay(!showProjectOverlay)\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <FaRegListAlt />\n          </span>\n          <span\n            className={classes.date}\n            data-testid=\"show-task-date-overlay\"\n            onClick={() => setShowTaskDate(!showTaskDate)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') setShowTaskDate(!showTaskDate)\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <FaRegCalendarAlt />\n          </span>\n        </div>\n      )}\n    </div>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { VscAdd, VscExtensions, VscSignOut } from 'react-icons/vsc'\nimport { useDispatch } from 'react-redux'\nimport classes from './Header.module.scss'\nimport { AddTask } from '../AddTask/AddTask'\nimport { UserIServer } from '../../../redux/auth/auth-types'\nimport { authAPI } from '../../../api/api'\nimport { setAuthUser } from '../../../redux/auth/auth-reducer'\n\nexport const Header = () => {\n  const [shouldShowMain, setShouldShowMain] = useState<boolean>(false)\n  const [showQuickAddTask, setShowQuickAddTask] = useState<boolean>(false)\n\n  const dispatch = useDispatch()\n  const [logOut] = authAPI.useLogOutMutation()\n\n  const signOutHandler = useCallback(() => {\n    const userFromLocalStorage: string | null = localStorage.getItem('authUser')\n    if (typeof userFromLocalStorage === 'string' && userFromLocalStorage.length > 0) {\n      const userFromLocalStorageParse: UserIServer = JSON.parse(userFromLocalStorage)\n      logOut(userFromLocalStorageParse.refreshToken).then((res) => {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        if (res && res?.data?.success) {\n          dispatch(setAuthUser({ userId: '', userEmail: '', userName: '' }))\n          localStorage.removeItem('authUser')\n        }\n      })\n    }\n  }, [])\n\n  return (\n    <header className={classes.header} data-testid=\"header\">\n      <nav className={classes.navigation}>\n        <div className={classes.burger} aria-label=\"Close/Open sidebar\">\n          <button className={classes.headerBtn} data-testid=\"Close/Open sidebar\" type=\"button\">\n            <VscExtensions />\n          </button>\n        </div>\n        <div className={classes.settings}>\n          <ul>\n            <li aria-label=\"Quick add task\" className={classes.settingsItem}>\n              <button\n                type=\"button\"\n                data-testid=\"quick-add-task-action\"\n                className={classes.headerBtn}\n                onClick={() => {\n                  setShowQuickAddTask(true)\n                  setShouldShowMain(true)\n                }}\n              >\n                <VscAdd />\n              </button>\n            </li>\n            {/* <li aria-label=\"Toggle dark mode\" className={classes.settingsItem}> */}\n            {/*  <button */}\n            {/*    type=\"button\" */}\n            {/*    data-testid=\"dark-mode-action\" */}\n            {/*    className={classes.headerBtn} */}\n            {/*    onClick={() => setDarkMode(!darkMode)} */}\n            {/*  > */}\n            {/*    <VscColorMode /> */}\n            {/*  </button> */}\n            {/* </li> */}\n            <li aria-label=\"Sign out\" className={classes.settingsItem}>\n              <button\n                type=\"button\"\n                className={classes.headerBtn}\n                data-testid=\"sign-out\"\n                onClick={signOutHandler}\n              >\n                <VscSignOut />\n              </button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n\n      <AddTask\n        showAddTaskMain={false}\n        showShouldMain={shouldShowMain}\n        showQuickAddTask={showQuickAddTask}\n        setShowQuickAddTask={setShowQuickAddTask}\n      />\n    </header>\n  )\n}\n","export const INBOX = 'INBOX'\nexport const TODAY = 'TODAY'\nexport const NEXT_7 = 'NEXT_7'\n","import { createSlice } from '@reduxjs/toolkit'\nimport { INBOX } from '../../constants/defaultProjects'\nimport { ProjectsI } from './projects-types'\n\nexport const initialState: ProjectsI = {\n  activeProject: INBOX,\n}\n\nexport const projectSlice = createSlice({\n  name: 'projects',\n  initialState,\n  reducers: {\n    setActiveProject(state, action) {\n      state.activeProject = action.payload\n    },\n  },\n})\n\nexport const { setActiveProject } = projectSlice.actions\nexport default projectSlice.reducer\n","import React from 'react'\nimport classes from './SmallModalWindow.module.scss'\nimport { Button } from '../Button/Button'\n\ninterface SmallModalWindowPropsI {\n  description: string\n  deleteTask: () => void\n  onClose: () => void\n}\n\nexport const SmallModalWindow: React.FC<SmallModalWindowPropsI> = ({\n  description,\n  deleteTask,\n  onClose,\n}) => (\n  <div className={classes.modal} data-testid=\"small-modal-window\">\n    <p className={classes.title}>{description}</p>\n    <div className={classes.buttons}>\n      <Button\n        onClick={() => {\n          deleteTask()\n        }}\n        label=\"Delete\"\n        color=\"primary\"\n        dataTestId=\"small-modal-window-delete\"\n      />\n      <Button\n        onClick={() => onClose()}\n        label=\"Cancel\"\n        color=\"transparent\"\n        dataTestId=\"small-modal-window-cancel\"\n      />\n    </div>\n  </div>\n)\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { VscKebabVertical } from 'react-icons/vsc'\nimport classes from './IndividualProject.module.scss'\nimport { INBOX } from '../../../constants/defaultProjects'\nimport { setActiveProject } from '../../../redux/projects/projects-reducer'\nimport { getActiveProject } from '../../../redux/projects/projects-selectors'\nimport { ProjectI, ProjectsStateI } from '../../../redux/projects/projects-types'\nimport { useOutsideClick } from '../../../hooks/useOutSideClick'\nimport { SmallModalWindow } from '../../../common/UI/SmallModalWindow/SmallModalWindow'\nimport { projectsAPI } from '../../../api/api'\n\ninterface IndividualProjectPropsI {\n  project: ProjectI\n  refetch: () => void\n}\n\nexport const IndividualProject = ({ project, refetch }: IndividualProjectPropsI) => {\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const deleteModalRef = useRef<HTMLDivElement>(null)\n\n  const activeProject = useSelector((state: ProjectsStateI) => getActiveProject(state))\n\n  const dispatch = useDispatch()\n  const selectProject = useCallback((id) => dispatch(setActiveProject(id)), [dispatch])\n\n  const [\n    deleteProject,\n    { data: deleteProjectResponse, isLoading },\n  ] = projectsAPI.useDeleteProjectMutation()\n\n  const toggleDeleteModal = () => {\n    setShowConfirm(!showConfirm)\n  }\n\n  useOutsideClick(deleteModalRef, showConfirm, toggleDeleteModal)\n\n  useEffect(() => {\n    if (!isLoading && deleteProjectResponse && deleteProjectResponse.success) {\n      refetch()\n    }\n  }, [deleteProjectResponse, isLoading])\n\n  return (\n    <>\n      <li\n        key={project.id}\n        className={`${classes.project} ${activeProject === project.id ? classes.active : ''}`}\n        data-testid=\"project-action-parent\"\n      >\n        <div className={classes.projectAction}>\n          <div\n            className={classes.projectItem}\n            data-testid=\"project-action\"\n            aria-label={`Select ${project.name} as the task project`}\n            role=\"button\"\n            tabIndex={0}\n            onClick={() => {\n              selectProject(project.id)\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                selectProject(project.id)\n              }\n            }}\n          >\n            <span className={classes.dot}>•</span>\n            <span>{project.name}</span>\n          </div>\n          <div\n            className={classes.delete}\n            data-testid=\"delete-project\"\n            onClick={() => toggleDeleteModal()}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') toggleDeleteModal()\n            }}\n            tabIndex={0}\n            role=\"button\"\n            aria-label=\"Confirm deletion of project\"\n          >\n            <VscKebabVertical />\n            {showConfirm && (\n              <div className={classes.deleteModal} ref={deleteModalRef}>\n                <SmallModalWindow\n                  description=\"Are you sure you want to delete this project?\"\n                  deleteTask={() => {\n                    deleteProject(project.id)\n                    selectProject(INBOX)\n                  }}\n                  onClose={() => setShowConfirm(false)}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </li>\n    </>\n  )\n}\n","import { useCallback, useEffect, RefObject } from 'react'\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useOutsideClick = (\n  ref: RefObject<HTMLDivElement>,\n  display: boolean,\n  callback: () => void\n) => {\n  const handleClick = useCallback(\n    (e: Event) => {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      if (ref.current && !ref.current.contains(e.target)) {\n        callback()\n      }\n    },\n    [callback, ref]\n  )\n\n  useEffect(() => {\n    if (display) {\n      document.addEventListener('mousedown', handleClick)\n    } else {\n      document.removeEventListener('mousedown', handleClick)\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClick)\n    }\n  }, [display, handleClick])\n}\n","import React from 'react'\nimport { v4 as uuid } from 'uuid'\nimport { IndividualProject } from '../IndividualProject/IndividualProject'\nimport { projectsAPI } from '../../../api/api'\n\nexport const Projects: React.FC = () => {\n  const { data: projects, refetch } = projectsAPI.useGetAllProjectsByIdQuery('')\n\n  return (\n    <div data-testid=\"all-projects\">\n      {projects &&\n        projects.map((project) => (\n          <IndividualProject key={uuid()} project={project} refetch={refetch} />\n        ))}\n    </div>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { VscAdd } from 'react-icons/vsc'\nimport classes from './AddProject.module.scss'\nimport { Button } from '../../../common/UI/Button/Button'\nimport { ProjectI } from '../../../redux/projects/projects-types'\nimport { projectsAPI } from '../../../api/api'\n\ninterface AddProjectPropsI {\n  shouldShow?: boolean\n  userId: string\n}\n\nexport const AddProject: React.FC<AddProjectPropsI> = ({ shouldShow = false }) => {\n  const [show, setShow] = useState<boolean>(shouldShow)\n  const [project, setProject] = useState<ProjectI>({\n    name: '',\n    description: '',\n    id: '',\n  })\n\n  const { refetch } = projectsAPI.useGetAllProjectsByIdQuery('')\n  const [addProject, { data: addProjectResponse, isLoading }] = projectsAPI.useAddProjectMutation()\n\n  const handleAddProject = (item: ProjectI) => {\n    addProject(item)\n    setProject({ ...project, name: '' })\n    setShow(false)\n  }\n\n  useEffect(() => {\n    if (!isLoading && addProjectResponse) {\n      refetch()\n    }\n  }, [addProjectResponse, isLoading])\n\n  return (\n    <div className={classes.wrapper} data-testid=\"add-project\">\n      {!show && (\n        <div\n          className={classes.addProject}\n          aria-label=\"Add Project\"\n          data-testid=\"add-project-action\"\n          onClick={() => setShow(true)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') setShow(true)\n          }}\n          role=\"button\"\n          tabIndex={0}\n        >\n          <span className={classes.plus}>\n            <VscAdd />\n          </span>\n          <span className={classes.text}>Add Project</span>\n        </div>\n      )}\n\n      {show && (\n        <>\n          <div className={classes.input} data-testid=\"add-project-inner\">\n            <input\n              value={project.name}\n              onChange={(e) => setProject({ ...project, name: e.target.value })}\n              className={classes.name}\n              data-testid=\"project-name\"\n              type=\"text\"\n              placeholder=\"Name your project\"\n            />\n          </div>\n\n          <div className={classes.buttons}>\n            <Button\n              color=\"primary\"\n              label=\"Add Project\"\n              onClick={() => handleAddProject(project)}\n              dataTestId=\"add-project-submit\"\n            />\n            <Button\n              color=\"transparent\"\n              label=\"Cancel\"\n              onClick={() => setShow(false)}\n              dataTestId=\"hide-project-overlay\"\n            />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport classes from './TaskCounter.module.scss'\n\ninterface TasksCounterPropsI {\n  count: number\n}\n\nexport const TasksCounter: React.FC<TasksCounterPropsI> = ({ count }) => (\n  <>\n    {count > 0 && (\n      <span data-testid=\"task-counter\" className={classes.counter}>\n        {count}\n      </span>\n    )}\n  </>\n)\n","import React, { useCallback, useState } from 'react'\nimport { FaInbox, FaRegCalendarAlt, FaRegCalendar } from 'react-icons/fa'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { VscChevronDown } from 'react-icons/vsc'\nimport classes from './Sidebar.module.scss'\nimport { Projects } from '../Projects/Projects'\nimport { AddProject } from '../AddProject/AddProject'\nimport { INBOX, NEXT_7, TODAY } from '../../../constants/defaultProjects'\nimport { getActiveProject } from '../../../redux/projects/projects-selectors'\nimport { TasksCounter } from '../../../common/UI/TasksCounter/TasksCounter'\nimport { setActiveProject } from '../../../redux/projects/projects-reducer'\nimport { ProjectsStateI } from '../../../redux/projects/projects-types'\nimport { tasksAPI } from '../../../api/api'\n\ninterface SidebarPropsI {\n  userId: string\n}\n\nexport const Sidebar: React.FC<SidebarPropsI> = ({ userId }) => {\n  const [showProjects, setShowProjects] = useState<boolean>(true)\n\n  const dispatch = useDispatch()\n\n  const selectProject = useCallback((projectId) => dispatch(setActiveProject(projectId)), [\n    dispatch,\n  ])\n\n  const { data: tasks } = tasksAPI.useGetAllTasksByIdQuery('')\n  const inboxTaskCount = tasks?.filter((elem) => elem.projectId === INBOX).length || 0\n  const todayTaskCount = tasks?.filter((elem) => elem.projectId === TODAY).length || 0\n  const next7TaskCount = tasks?.filter((elem) => elem.projectId === NEXT_7).length || 0\n\n  const activeProject = useSelector((state: ProjectsStateI) => getActiveProject(state))\n\n  return (\n    <div className={classes.sidebar} data-testid=\"sidebar\">\n      <ul className={classes.generic}>\n        <li data-testid=\"inbox\" className={activeProject === INBOX ? classes.active : ''}>\n          <div\n            aria-label=\"Show inbox tasks\"\n            data-testid=\"inbox-action\"\n            onClick={() => {\n              selectProject(INBOX)\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                selectProject(INBOX)\n              }\n            }}\n            role=\"button\"\n            tabIndex={0}\n          >\n            <span>\n              <FaInbox />\n            </span>\n            <span>Inbox</span>\n\n            <span className={classes.taskCounterContainer}>\n              <TasksCounter count={inboxTaskCount} />\n            </span>\n          </div>\n        </li>\n        <li data-testid=\"today\" className={activeProject === TODAY ? classes.active : ''}>\n          <div\n            aria-label=\"Show today`s tasks\"\n            data-testid=\"today-action\"\n            onClick={() => {\n              selectProject(TODAY)\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                selectProject(TODAY)\n              }\n            }}\n            role=\"button\"\n            tabIndex={0}\n          >\n            <span>\n              <span>\n                <FaRegCalendar />\n              </span>\n              <span>Today</span>\n              <span className={classes.taskCounterContainer}>\n                <TasksCounter count={todayTaskCount} />\n              </span>\n            </span>\n          </div>\n        </li>\n        <li data-testid=\"next_7\" className={activeProject === NEXT_7 ? classes.active : ''}>\n          <div\n            aria-label=\"Show tasks for the next 7 days\"\n            data-testid=\"next_7-action\"\n            onClick={() => {\n              selectProject(NEXT_7)\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                selectProject(NEXT_7)\n              }\n            }}\n            role=\"button\"\n            tabIndex={0}\n          >\n            <span>\n              <FaRegCalendarAlt />\n            </span>\n            <span>Next 7 days</span>\n            <span className={classes.taskCounterContainer}>\n              <TasksCounter count={next7TaskCount} />\n            </span>\n          </div>\n        </li>\n      </ul>\n\n      <div\n        className={classes.middle}\n        onClick={() => setShowProjects(!showProjects)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') setShowProjects(!showProjects)\n        }}\n        aria-label={`${showProjects ? 'Hide' : 'Show'} projects`}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <span className={classes.iconChevron}>\n          <VscChevronDown className={!showProjects ? classes.hiddenProject : ''} />\n        </span>\n        <h2>Projects</h2>\n      </div>\n\n      <ul className={classes.projects}>{showProjects && <Projects />}</ul>\n      {showProjects && <AddProject userId={userId} />}\n    </div>\n  )\n}\n","export interface collatedTaskI {\n  key: string\n  name: string\n}\n\nexport const collatedTasks = [\n  { key: 'INBOX', name: 'Inbox' },\n  { key: 'TODAY', name: 'Today' },\n  { key: 'NEXT_7', name: 'Next 7 Days' },\n]\n","import { collatedTaskI, collatedTasks } from '../constants/collatedTasks'\nimport { ProjectI } from '../redux/projects/projects-types'\n\nexport const getTitle = (projects: Array<ProjectI>, projectId: string): string => {\n  const object = projects.find((project) => project.id === projectId)\n  if (object !== undefined) {\n    return object.name\n  }\n  return ''\n}\n\nexport const getCollatedTitle = (projects: Array<collatedTaskI>, key: string): string => {\n  const object = projects.find((project) => project.key === key)\n  if (object !== undefined) {\n    return object.name\n  }\n  return ''\n}\n\nexport const collatedTasksExist = (selectedProject: string): collatedTaskI | undefined =>\n  collatedTasks.find((task) => task.key === selectedProject)\n","import React, { useState } from 'react'\nimport { VscCheck } from 'react-icons/vsc'\nimport classes from './Checkbox.module.scss'\n\ntype CheckboxPropsI = {\n  archiveTask: () => void\n  name: string\n}\nexport const Checkbox: React.FC<CheckboxPropsI> = ({ name, archiveTask }) => {\n  const [mouseEnter, setMouseEnter] = useState<boolean>(false)\n  const [checked, setChecked] = useState<boolean>(false)\n\n  const handleArchiveTask = () => {\n    setChecked(true)\n    setTimeout(() => archiveTask(), 300)\n  }\n\n  return (\n    <div\n      className={classes.checkboxHolder}\n      data-testid=\"checkbox-action\"\n      onClick={() => handleArchiveTask()}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') handleArchiveTask()\n      }}\n      aria-label={`Mark ${name} as done?`}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <span\n        className={`${classes.checkbox} ${checked && classes.checkboxChecked}`}\n        data-testid=\"checkbox-circle\"\n        onMouseEnter={() => setMouseEnter(true)}\n        onMouseOver={() => setMouseEnter(true)}\n        onMouseLeave={() => setMouseEnter(false)}\n      >\n        {(mouseEnter || checked) && (\n          <span data-testid=\"checkbox-icon\">\n            <VscCheck />\n          </span>\n        )}\n      </span>\n    </div>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { VscKebabVertical } from 'react-icons/vsc'\nimport classes from './Task.module.scss'\nimport { Checkbox } from '../../../common/UI/Checkbox/Checkbox'\nimport { SmallModalWindow } from '../../../common/UI/SmallModalWindow/SmallModalWindow'\nimport { tasksAPI } from '../../../api/api'\n\ninterface TaskPropsI {\n  name: string\n  id: string\n  projectId: string\n  archived: boolean\n  date: string\n  description: string\n  refetch: () => void\n}\n\nexport const Task = ({ id, name, description, archived, date, projectId, refetch }: TaskPropsI) => {\n  const [isModalDisplay, setIsModalDisplay] = useState(false)\n\n  const [\n    deleteTask,\n    { isLoading: isDeleteTaskLoading, data: deleteTaskResponse },\n  ] = tasksAPI.useDeleteTaskMutation()\n  const [\n    updateTask,\n    { isLoading: isUpdateTaskLoading, data: updateTaskResponse },\n  ] = tasksAPI.useUpdateTaskByIdMutation()\n\n  const archiveTask = useCallback(\n    () => updateTask({ taskId: id, task: { name, description, archived: true, date, projectId } }),\n    [id, name, description, archived, date, projectId]\n  )\n\n  useEffect(() => {\n    if (!isUpdateTaskLoading && updateTaskResponse) {\n      refetch()\n    }\n  }, [isUpdateTaskLoading, updateTaskResponse])\n\n  useEffect(() => {\n    if (!isDeleteTaskLoading && deleteTaskResponse && deleteTaskResponse.success) {\n      refetch()\n    }\n  }, [isDeleteTaskLoading, deleteTaskResponse])\n\n  return (\n    <>\n      <li data-testid=\"task\">\n        <div className={classes.taskBody}>\n          <Checkbox name={name} archiveTask={archiveTask} />\n          <span className={classes.name}>{name}</span>\n        </div>\n        <div\n          className={classes.kebab}\n          data-testid=\"task-kebab\"\n          role=\"button\"\n          tabIndex={0}\n          aria-label={`${isModalDisplay ? 'Close' : 'Open'} delete task \"${name}\" modal?`}\n          onClick={() => setIsModalDisplay(!isModalDisplay)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              setIsModalDisplay(!isModalDisplay)\n            }\n          }}\n        >\n          <VscKebabVertical />\n          {isModalDisplay && (\n            <div className={classes.modal}>\n              <SmallModalWindow\n                description=\"Are you sure you want to delete this task?\"\n                deleteTask={() => deleteTask(id)}\n                onClose={() => setIsModalDisplay(false)}\n              />\n            </div>\n          )}\n        </div>\n      </li>\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport './Tasks.scss'\nimport { useSelector } from 'react-redux'\nimport { v4 as uuid } from 'uuid'\nimport { collatedTasks } from '../../../constants/collatedTasks'\nimport { getTitle, getCollatedTitle, collatedTasksExist } from '../../../helpers/helpers'\nimport { AddTask } from '../AddTask/AddTask'\nimport { getActiveProject } from '../../../redux/projects/projects-selectors'\nimport { ProjectsStateI } from '../../../redux/projects/projects-types'\nimport { TaskI } from '../../../redux/tasks/tasks-types'\nimport { Task } from '../Task/Task'\nimport { projectsAPI, tasksAPI } from '../../../api/api'\n\nexport const Tasks: React.FC = () => {\n  const [selectedProjectTasks, setSelectedProjectTasks] = useState<TaskI[]>([])\n  const selectedProject = useSelector((state: ProjectsStateI) => getActiveProject(state))\n  const { data: projects } = projectsAPI.useGetAllProjectsByIdQuery('')\n  const { data: tasks, refetch } = tasksAPI.useGetAllTasksByIdQuery('')\n\n  const createProjectName = () => {\n    let name = ''\n    if (\n      projects &&\n      projects.length > 0 &&\n      selectedProject &&\n      !collatedTasksExist(selectedProject)\n    ) {\n      name = getTitle(projects, selectedProject)\n    }\n\n    if (collatedTasksExist(selectedProject) && selectedProject) {\n      name = getCollatedTitle(collatedTasks, selectedProject)\n    }\n\n    return name\n  }\n\n  const getFilteredTasks = (allTasks: Array<TaskI>, selectProjectId: string) =>\n    allTasks.filter((task: TaskI) => task.projectId === selectProjectId && !task.archived)\n\n  const projectName = createProjectName()\n\n  useEffect(() => {\n    document.title = `BOO—BOO: ${projectName} tasks`\n  }, [projectName])\n\n  useEffect(() => {\n    if (tasks) {\n      const projectTasks = getFilteredTasks(tasks, selectedProject)\n      setSelectedProjectTasks(projectTasks)\n    }\n  }, [tasks, selectedProject])\n\n  return (\n    <div className=\"tasks\" data-testid=\"tasks\">\n      <h2 data-testid=\"project-name\">{projectName}</h2>\n\n      {tasks && selectedProjectTasks.length > 0 && (\n        <ul className=\"tasks__list\">\n          {selectedProjectTasks.map((task) => (\n            <Task\n              key={uuid()}\n              id={task.id}\n              name={task.name}\n              archived={task.archived}\n              projectId={selectedProject}\n              date={task.date}\n              description={task.description}\n              refetch={refetch}\n            />\n          ))}\n        </ul>\n      )}\n\n      <AddTask />\n\n      {selectedProjectTasks.length === 0 && (\n        <>\n          <div className=\"tasks__done\" />\n          <div className=\"tasks__done-text\" data-testid=\"task-not-found\">\n            All tasks are done! Nice work!\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport classes from './Content.module.scss'\nimport { Sidebar } from '../Sidebar/Sidebar'\nimport { Tasks } from '../Tasks/Tasks'\n\ninterface ContentPropsI {\n  userId: string\n}\n\nexport const Content: React.FC<ContentPropsI> = ({ userId }) => (\n  <section className={classes.content} data-testid=\"content\">\n    <Sidebar userId={userId} />\n    <Tasks />\n  </section>\n)\n","import React from 'react'\nimport { Header } from '../components/Header/Header'\nimport { Content } from '../components/Content/Content'\n\ninterface BooBooPropsI {\n  userId: string\n}\n\nexport const BooBoo: React.FC<BooBooPropsI> = ({ userId }) => (\n  <>\n    <Header />\n    <Content userId={userId} />\n  </>\n)\n","import React from 'react'\nimport { BrowserRouter, Switch } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { SignIn } from '../pages/SignIn/SignIn'\nimport { SignUp } from '../pages/SignUp/SignUp'\nimport * as ROUTES from '../constants/routes'\nimport { IsUserRedirect, ProtectedRoute } from '../helpers/routes'\nimport { HomePage } from '../pages/HomePage/HomePage'\nimport { BooBoo } from '../pages/BooBoo/BooBoo'\nimport { getUser } from '../redux/auth/auth-selectors'\nimport { AuthStateI } from '../redux/auth/auth-types'\n\nexport const AppRouter: React.FC = () => {\n  const user = useSelector((state: AuthStateI) => getUser(state))\n\n  return (\n    <BrowserRouter>\n      <main data-testid=\"application\">\n        <Switch>\n          <IsUserRedirect user={user} loggedInPath={ROUTES.APP} path={ROUTES.SIGN_IN} exact>\n            <SignIn />\n          </IsUserRedirect>\n          <IsUserRedirect user={user} loggedInPath={ROUTES.APP} path={ROUTES.SIGN_UP} exact>\n            <SignUp />\n          </IsUserRedirect>\n          <ProtectedRoute user={user} path={ROUTES.APP} exact>\n            <BooBoo userId={user.userId} />\n          </ProtectedRoute>\n          <IsUserRedirect user={user} loggedInPath={ROUTES.APP} path={ROUTES.HOME} exact>\n            <HomePage />\n          </IsUserRedirect>\n        </Switch>\n      </main>\n    </BrowserRouter>\n  )\n}\n","import { AuthStateI, UserI } from './auth-types'\n\n// export const getUserId = (state: AuthStateI): string => state.auth.user.userId\nexport const getUser = (state: AuthStateI): UserI => state.auth.user || {}\n","import React, { useEffect } from 'react'\nimport './App.scss'\nimport 'normalize.css'\nimport { useDispatch } from 'react-redux'\nimport { AppRouter } from './routes/AppRouter'\nimport { authMeTC } from './redux/auth/auth-reducer'\n\nexport const App = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(authMeTC())\n  }, [dispatch])\n\n  return <AppRouter />\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport authReducer from './auth/auth-reducer'\nimport projectsReducer from './projects/projects-reducer'\nimport { authAPI, projectsAPI, tasksAPI } from '../api/api'\n\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    projects: projectsReducer,\n    [projectsAPI.reducerPath]: projectsAPI.reducer,\n    [tasksAPI.reducerPath]: tasksAPI.reducer,\n    [authAPI.reducerPath]: authAPI.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(projectsAPI.middleware, tasksAPI.middleware, authAPI.middleware),\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { App } from './App'\nimport { store } from './redux/redux-store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}