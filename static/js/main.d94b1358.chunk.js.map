{"version":3,"sources":["components/pages/mainStylesForPages.module.scss","components/AddTask/AddTask.module.scss","components/layout/Sidebar/Sidebar.module.scss","components/pages/HomePage/HomePage.module.scss","components/layout/Header/Header.module.scss","components/TaskDate/TaskDate.module.scss","components/IndividualProject/IndividualProject.module.scss","components/AddProject/AddProject.module.scss","components/ProjectOverlay/ProjectOverlay.module.scss","components/Task/Task.module.scss","components/UI/SmallModalWindow/SmallModalWindow.module.scss","components/UI/Checkbox/Checkbox.module.scss","components/UI/Button/Button.module.scss","components/pages/SignIn/SignIn.module.scss","components/UI/Logo/Logo.module.scss","components/pages/SignUp/SignUp.module.scss","components/layout/Content/Content.module.scss","components/UI/TasksCounter/TaskCounter.module.scss","constants/routes.ts","firebase.js","api/api.ts","redux/auth/auth-reducer.ts","components/pages/HomePage/logo.svg","components/UI/Logo/Logo.tsx","components/pages/SignIn/SignIn.tsx","components/pages/SignUp/SignUp.tsx","helpers/routes.js","components/pages/HomePage/HomePage.tsx","redux/projects/projects-selectors.ts","components/ProjectOverlay/ProjectOverlay.tsx","components/TaskDate/TaskDate.tsx","components/UI/Button/Button.tsx","redux/tasks/tasks-reducer.ts","components/AddTask/AddTask.tsx","redux/auth/auth-selectors.ts","components/layout/Header/Header.tsx","constants/defaultProjects.ts","redux/projects/projects-reducer.ts","components/UI/SmallModalWindow/SmallModalWindow.tsx","components/IndividualProject/IndividualProject.tsx","hooks/useOutSideClick.ts","components/Projects/Projects.tsx","components/AddProject/AddProject.tsx","components/UI/TasksCounter/TasksCounter.tsx","redux/tasks/tasks-selectors.ts","components/layout/Sidebar/Sidebar.tsx","constants/collatedTasks.ts","helpers/helpers.ts","components/UI/Checkbox/Checkbox.tsx","components/Task/Task.tsx","components/Tasks/Tasks.tsx","components/layout/Content/Content.tsx","components/pages/BooBoo/BooBoo.tsx","routes/AppRouter.tsx","App.tsx","redux/redux-store.js","index.js"],"names":["module","exports","HOME","APP","SIGN_UP","SIGN_IN","firebaseConfig","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","authAPI","callback","auth","onAuthStateChanged","email","password","signInWithEmailAndPassword","signOut","user","firestore","collection","add","name","createUserWithEmailAndPassword","projectsAPI","userId","where","orderBy","get","project","docId","doc","delete","tasksAPI","taskId","update","archived","task","SET_AUTH_USER_DATA","SIGN_OUT_USER","initialState","userEmail","userName","setAuthUserData","type","payload","signOutUser","authMeTC","dispatch","a","userFromLocalStorage","localStorage","getItem","userFromLocalStorageParse","JSON","parse","authUser","uid","displayName","setItem","stringify","Logo","to","ROUTES","data-testid","className","classes","logo","src","alt","height","width","Header","mainClasses","header","SignIn","useForm","register","handleSubmit","errors","useState","error","useDispatch","onSubmit","useCallback","data","Email","Password","then","catch","console","log","useEffect","document","title","mainWrapper","wrapper","main","formBox","form","label","placeholder","ref","required","pattern","minLength","button","footerParagraph","footerLink","ROUTER","SignUp","Name","result","updateProfile","isUserExist","length","IsUserRedirect","loggedInPath","children","rest","render","pathname","ProtectedRoute","location","state","from","HomePage","homePageBody","navList","navListUl","navListElement","navListElement__mainColored","headerTitle","getStartedContainer","getStarted","manImage","getActiveProject","projects","activeProject","getAllProjects","allProjects","ProjectOverlay","setProject","showProjectOverlay","setShowProjectOverlay","useSelector","projectOverlay","overlayList","map","listItem","listElement","onClick","onKeyDown","e","key","role","tabIndex","aria-label","TaskDate","setShowTaskDate","setTaskDate","showTaskDate","taskDate","list","listItemElement","dayjs","format","Button","dataTestId","color","mainBtn","allTasks","SET_TASKS","ADD_TASK","ARCHIVED_TASK","DELETE_TASK","archivedTaskHandler","tasks","id","addTask","archivedTask","deleteTask","getAllTasksTC","snapshot","sortTasks","docs","createDate","date","sort","b","AddTask","showAddTaskMain","showShouldMain","showQuickAddTask","setShowQuickAddTask","taskName","setTaskName","showAddTaskInput","setShowAddTaskInput","selectedProject","getUserId","addTaskHandler","addTaskTC","getTaskObject","collatedDate","Date","now","overlay","shallow","plus","text","undefined","cancelX","taskProjectOverlay","taskDateOverlay","content","value","onChange","target","buttonCancel","shouldShowMain","setShouldShowMain","signOutHandler","removeItem","navigation","burger","headerBtn","settings","settingsItem","INBOX","TODAY","NEXT_7","SET_ACTIVE_PROJECT","SET_ALL_PROJECTS","ADD_PROJECT","DELETE_PROJECT","setActiveProject","addProject","deleteProject","getAllProjectTC","SmallModalWindow","description","onClose","modal","buttons","IndividualProject","showConfirm","setShowConfirm","deleteModalRef","useRef","selectProject","deleteProjectTC","toggleDeleteModal","display","handleClick","current","contains","addEventListener","removeEventListener","useOutsideClick","active","projectAction","projectItem","data-doc-id","dot","deleteModal","Projects","uuid","AddProject","shouldShow","show","setShow","item","addProjectTC","input","TasksCounter","count","counter","getAllTasks","getNotArchivedTasks","createSelector","filter","getInboxTasksCounter","elem","getTodayTasksCounter","getNext7TasksCounter","Sidebar","showProjects","setShowProjects","selectInboxTaskCountMemoized","useMemo","selectTodayTaskCountMemoized","selectNext7TaskCountMemoized","inboxTaskCount","todayTaskCount","next7TaskCount","sidebar","generic","taskCounterContainer","middle","iconChevron","hiddenProject","collatedTasks","collatedTasksExist","find","Checkbox","taskDesc","mouseEnter","setMouseEnter","checked","setChecked","archiveTask","archiveTaskTC","handleArchiveTask","setTimeout","checkboxHolder","checkbox","checkboxChecked","onMouseEnter","onMouseOver","onMouseLeave","Task","isModalDisplay","setIsModalDisplay","deleteTaskTC","taskBody","kebab","Tasks","selectProjectId","projectName","object","getTitle","getCollatedTitle","createProjectName","selectedProjectTasks","Content","BooBoo","AppRouter","getUser","path","exact","App","reducer","action","store","configureStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d94b1358.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWrapper\":\"mainStylesForPages_mainWrapper__3mJd3\",\"header\":\"mainStylesForPages_header__2hgyn\",\"main\":\"mainStylesForPages_main__2vKU-\",\"formBox\":\"mainStylesForPages_formBox__jBbCe\",\"title\":\"mainStylesForPages_title__10FUb\",\"form\":\"mainStylesForPages_form__3dZ9o\",\"button\":\"mainStylesForPages_button__1-rJd\",\"footerParagraph\":\"mainStylesForPages_footerParagraph__35Iet\",\"footerLink\":\"mainStylesForPages_footerLink__22M9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addTask\":\"AddTask_addTask__247g5\",\"main\":\"AddTask_main__2suij\",\"shallow\":\"AddTask_shallow__34SD6\",\"plus\":\"AddTask_plus__29Hky\",\"text\":\"AddTask_text__1pUs7\",\"overlay\":\"AddTask_overlay__UCtHf\",\"header\":\"AddTask_header__236mU\",\"title\":\"AddTask_title__2fiTG\",\"cancelX\":\"AddTask_cancelX__3IxMi\",\"content\":\"AddTask_content__FA1wB\",\"buttonCancel\":\"AddTask_buttonCancel__1OOQX\",\"project\":\"AddTask_project__2R26n\",\"date\":\"AddTask_date__3t2Yo\",\"taskDateOverlay\":\"AddTask_taskDateOverlay__ipeCL\",\"taskProjectOverlay\":\"AddTask_taskProjectOverlay__1hYjV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"Sidebar_sidebar__36giv\",\"middle\":\"Sidebar_middle__gFftU\",\"iconChevron\":\"Sidebar_iconChevron__3Ntzn\",\"hiddenProject\":\"Sidebar_hiddenProject__3YLn0\",\"generic\":\"Sidebar_generic__2XBE3\",\"taskCounterContainer\":\"Sidebar_taskCounterContainer__1hy2o\",\"active\":\"Sidebar_active__1PTZk\",\"projects\":\"Sidebar_projects__RHQnX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"homePageBody\":\"HomePage_homePageBody__1p_Dc\",\"header\":\"HomePage_header__1uVwF\",\"navList\":\"HomePage_navList__2XlV5\",\"navListUl\":\"HomePage_navListUl__3uRyH\",\"navListElement\":\"HomePage_navListElement__17SYm\",\"navListElement__mainColored\":\"HomePage_navListElement__mainColored__3vGix\",\"headerTitle\":\"HomePage_headerTitle__XTBKu\",\"getStartedContainer\":\"HomePage_getStartedContainer__3opGX\",\"getStarted\":\"HomePage_getStarted__1Hh2k\",\"manImage\":\"HomePage_manImage__H5jcM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1xxN3\",\"headerBtn\":\"Header_headerBtn__19mAz\",\"navigation\":\"Header_navigation__15sPt\",\"burger\":\"Header_burger__2VTYI\",\"settings\":\"Header_settings__2Ks38\",\"settingsItem\":\"Header_settingsItem__3fYSe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskDate\":\"TaskDate_taskDate__KR9yh\",\"list\":\"TaskDate_list__1zvCm\",\"listItem\":\"TaskDate_listItem__14yXg\",\"listItemElement\":\"TaskDate_listItemElement__1OsMY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"project\":\"IndividualProject_project__VtYXr\",\"active\":\"IndividualProject_active__24bEM\",\"projectAction\":\"IndividualProject_projectAction__HEjJA\",\"projectItem\":\"IndividualProject_projectItem__33dls\",\"dot\":\"IndividualProject_dot__f2Vyn\",\"delete\":\"IndividualProject_delete__3_0BF\",\"deleteModal\":\"IndividualProject_deleteModal__1IO0J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addProject\":\"AddProject_addProject__2SXrN\",\"wrapper\":\"AddProject_wrapper__18Cve\",\"plus\":\"AddProject_plus__oaKh0\",\"text\":\"AddProject_text__2A1gh\",\"input\":\"AddProject_input__3TzLa\",\"name\":\"AddProject_name__3T6fm\",\"buttons\":\"AddProject_buttons__gWQVT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"projectOverlay\":\"ProjectOverlay_projectOverlay__25B1U\",\"overlayList\":\"ProjectOverlay_overlayList__1YEIh\",\"listItem\":\"ProjectOverlay_listItem__qSwBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskBody\":\"Task_taskBody__2pH5n\",\"name\":\"Task_name__O7Lfi\",\"kebab\":\"Task_kebab__wTaYh\",\"modal\":\"Task_modal__y0O5W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"SmallModalWindow_modal__32f6t\",\"title\":\"SmallModalWindow_title__2cOc8\",\"buttons\":\"SmallModalWindow_buttons__2uVZn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxHolder\":\"Checkbox_checkboxHolder__WwdEp\",\"checkbox\":\"Checkbox_checkbox__SJQ2s\",\"checkboxChecked\":\"Checkbox_checkboxChecked__10OfZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBtn\":\"Button_mainBtn__IYNtc\",\"primary\":\"Button_primary__CVuDV\",\"transparent\":\"Button_transparent__3nKLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SignIn_wrapper__1xQ3y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__4XOk3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"SignUp_wrapper__2k8W1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Content_content__3Yreh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counter\":\"TaskCounter_counter__hGZux\"};","export const HOME = '/boo-boo'\nexport const APP = '/app'\nexport const SIGN_UP = '/signup'\nexport const SIGN_IN = '/signin'\n","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\nconst firebaseConfig = firebase.initializeApp({\n  apiKey: 'AIzaSyChqBDn0E3oHkpSERR9Wl3rCY2VG0HrdeE',\n  authDomain: 'superapp-3aa57.firebaseapp.com',\n  databaseURL: 'https://superapp-3aa57.firebaseio.com',\n  projectId: 'superapp-3aa57',\n  storageBucket: 'superapp-3aa57.appspot.com',\n  messagingSenderId: '568179776426',\n  appId: '1:568179776426:web:ae83f3b6b66636a7ade9d3',\n  measurementId: 'G-W79CJ8Y5MX',\n})\n\nexport { firebaseConfig as firebase }\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { firebase } from '../firebase'\nimport { TaskI } from '../redux/tasks/tasks-types'\nimport { ProjectI } from '../redux/projects/projects-types'\nimport { UserI } from '../redux/auth/auth-types'\n\nexport const authAPI = {\n  authMe(callback: (user: any) => void) {\n    return firebase.auth().onAuthStateChanged(callback)\n  },\n\n  signIn(email: string, password: string) {\n    return firebase.auth().signInWithEmailAndPassword(email, password)\n  },\n\n  signOut() {\n    return firebase.auth().signOut()\n  },\n\n  addUser(user: UserI) {\n    return firebase\n      .firestore()\n      .collection('users')\n      .add({ ...user })\n  },\n\n  signUp(email: string, password: string, name: string) {\n    return firebase.auth().createUserWithEmailAndPassword(email, password)\n  },\n}\n\nexport const projectsAPI = {\n  getAllProjectsById(userId: string) {\n    return firebase\n      .firestore()\n      .collection('projects')\n      .where('userId', '==', userId)\n      .orderBy('projectId')\n      .get()\n  },\n\n  addProject(project: ProjectI) {\n    return firebase\n      .firestore()\n      .collection('projects')\n      .add({ ...project })\n  },\n\n  deleteProject(docId: string) {\n    return firebase.firestore().collection('projects').doc(docId).delete()\n  },\n}\n\nexport const tasksAPI = {\n  getAllTasksById(userId: string) {\n    return (\n      firebase\n        .firestore()\n        .collection('tasks')\n        .where('userId', '==', userId)\n        // .orderBy('projectId')\n        .get()\n    )\n  },\n\n  archivedTasksById(taskId: string) {\n    return firebase.firestore().collection('tasks').doc(taskId).update({ archived: true })\n  },\n\n  addTask(task: TaskI) {\n    return firebase\n      .firestore()\n      .collection('tasks')\n      .add({ ...task })\n  },\n\n  deleteTask(docId: string) {\n    return firebase.firestore().collection('tasks').doc(docId).delete()\n  },\n}\n","import { Action } from '@reduxjs/toolkit'\nimport { ThunkAction } from 'redux-thunk'\nimport { authAPI } from '../../api/api'\nimport {\n  AuthActionCreatorsType,\n  AuthI,\n  AuthStateI,\n  FirebaseUserI,\n  setAuthUserDataActionType,\n  signOutUserActionType,\n  UserI,\n} from './auth-types'\n\nexport const SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA'\nexport const SIGN_OUT_USER = 'SIGN_OUT_USER'\n\nconst initialState: AuthI = {\n  user: {\n    userId: '',\n    userEmail: '',\n    userName: '',\n  },\n}\n\nexport const authReducer = (state = initialState, action: AuthActionCreatorsType): AuthI => {\n  switch (action.type) {\n    case SET_AUTH_USER_DATA: {\n      return {\n        ...state,\n        user: { ...action.payload },\n      }\n    }\n    case SIGN_OUT_USER: {\n      return {\n        ...state,\n        user: { ...action.payload },\n      }\n    }\n    default:\n      return state\n  }\n}\n\n/* ActionCreators */\n\nexport const setAuthUserData = ({\n  userId,\n  userEmail,\n  userName,\n}: UserI): setAuthUserDataActionType => ({\n  type: SET_AUTH_USER_DATA,\n  payload: { userId, userEmail, userName },\n})\n\nexport const signOutUser = ({ userId, userEmail, userName }: UserI): signOutUserActionType => ({\n  type: SIGN_OUT_USER,\n  payload: { userId, userEmail, userName },\n})\n\n/* ThunkCreators */\nexport const authMeTC = (): ThunkAction<void, AuthStateI, unknown, Action> => async (dispatch) => {\n  const userFromLocalStorage: string | null = localStorage.getItem('authUser')\n  if (typeof userFromLocalStorage === 'string') {\n    const userFromLocalStorageParse: UserI = JSON.parse(userFromLocalStorage)\n    dispatch(setAuthUserData(userFromLocalStorageParse))\n  } else {\n    await authAPI.authMe((user: FirebaseUserI) => {\n      if (user) {\n        const { uid, email, displayName }: FirebaseUserI = user\n        const authUser = { userId: uid, userEmail: email, userName: displayName }\n        dispatch(setAuthUserData(authUser))\n        localStorage.setItem('authUser', JSON.stringify(authUser))\n        return authUser\n      }\n      return { userId: '', userEmail: '', userName: '' }\n    })\n  }\n}\n\nexport const signInTC = (\n  email: string,\n  password: string\n): ThunkAction<void, AuthStateI, unknown, Action> => async (dispatch) => {\n  await authAPI\n    .signIn(email, password)\n    .then(() => {\n      dispatch(authMeTC())\n    })\n    .catch((error) => console.log(error))\n}\n\nexport const signUpTC = (\n  email: string,\n  password: string,\n  name: string\n): ThunkAction<void, AuthStateI, unknown, Action> => async (dispatch) => {\n  await authAPI\n    .signUp(email, password, name)\n    .then((result) => {\n      authAPI.addUser({\n        userEmail: email,\n        userName: name,\n        userId: result.user ? result.user.uid : '',\n      })\n      return result.user?.updateProfile({ displayName: name })\n    })\n    .then(() => {\n      dispatch(authMeTC())\n    })\n}\n\nexport const signOutTC = (): ThunkAction<void, AuthStateI, unknown, Action> => async (dispatch) => {\n  await authAPI\n    .signOut()\n    .then(() => {\n      dispatch(signOutUser({ userId: '', userEmail: '', userName: '' }))\n      localStorage.removeItem('authUser')\n    })\n    .catch((error) => console.log(error))\n}\n","export default __webpack_public_path__ + \"static/media/logo.f91ee324.svg\";","import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport * as ROUTES from '../../../constants/routes'\nimport classes from './Logo.module.scss'\nimport logo from '../../pages/HomePage/logo.svg'\n\nexport const Logo: React.FC = () => (\n  <NavLink to={ROUTES.HOME} data-testid=\"logo\">\n    <img className={classes.logo} src={logo} alt=\"Boo-Boo logo\" height=\"28\" width=\"120\" />\n  </NavLink>\n)\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { NavLink } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport classes from './SignIn.module.scss'\nimport mainClasses from '../mainStylesForPages.module.scss'\nimport * as ROUTER from '../../../constants/routes'\nimport { signInTC } from '../../../redux/auth/auth-reducer'\nimport { Logo } from '../../UI/Logo/Logo'\n\ntype FormData = {\n  Email: string\n  Password: string\n}\n\nexport const Header: React.FC = () => (\n  <header className={mainClasses.header} data-testid=\"header\">\n    <Logo />\n  </header>\n)\n\nexport const SignIn: React.FC = () => {\n  const { register, handleSubmit, errors } = useForm<FormData>()\n  const [error, setError] = useState<string>('')\n\n  const dispatch = useDispatch()\n  const onSubmit = useCallback((data: FormData) => dispatch(signInTC(data.Email, data.Password)), [\n    dispatch,\n  ])\n\n  console.log('SignIn errors: ', errors)\n\n  useEffect(() => {\n    document.title = `BOO—BOO: SignIn`\n  })\n\n  return (\n    <div className={mainClasses.mainWrapper}>\n      <div className={classes.wrapper}>\n        <Header />\n\n        <div className={mainClasses.main}>\n          <div className={mainClasses.formBox}>\n            <h3 className={mainClasses.title}>Sign In</h3>\n            {error}\n            <form className={mainClasses.form} onSubmit={handleSubmit(onSubmit)}>\n              <label className={mainClasses.label}>\n                Email\n                <input\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  name=\"Email\"\n                  ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\n                />\n                {/* {errors.Email && <p>Require field</p>} */}\n              </label>\n\n              <label className={mainClasses.label}>\n                Password\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"Password\"\n                  ref={register({ required: true, minLength: 6 })}\n                />\n                {/* {errors.Password && <p>Require field</p>} */}\n              </label>\n              <button className={mainClasses.button} data-testid=\"sign-in\" type=\"submit\">\n                Sign In\n              </button>\n            </form>\n\n            <p className={mainClasses.footerParagraph}>\n              Don't have an account yet?\n              <NavLink className={mainClasses.footerLink} to={ROUTER.SIGN_UP}>\n                Sign up now\n              </NavLink>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { NavLink } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport classes from './SignUp.module.scss'\nimport mainClasses from '../mainStylesForPages.module.scss'\nimport * as ROUTER from '../../../constants/routes'\nimport { signUpTC } from '../../../redux/auth/auth-reducer'\nimport { Header } from '../SignIn/SignIn'\n\ntype FormData = {\n  Name: string\n  Email: string\n  Password: string\n  // RepeatPassword: string\n}\n\nexport const SignUp: React.FC = () => {\n  const { register, handleSubmit, errors } = useForm<FormData>()\n  const [error, setError] = useState<string>('')\n  const dispatch = useDispatch()\n\n  const onSubmit = useCallback(\n    (data: FormData) => dispatch(signUpTC(data.Email, data.Password, data.Name)),\n    [dispatch]\n  )\n\n  console.log('SignUp errors: ', errors)\n\n  useEffect(() => {\n    document.title = `BOO—BOO: SignUp`\n  })\n\n  return (\n    <div className={mainClasses.mainWrapper}>\n      <div className={classes.wrapper}>\n        <Header />\n        <div className={mainClasses.main}>\n          <div className={mainClasses.formBox}>\n            <h3 className={mainClasses.title}>Sign Up</h3>\n            {error}\n            <form className={mainClasses.form} onSubmit={handleSubmit(onSubmit)}>\n              <label>\n                Name\n                <input\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  name=\"Name\"\n                  ref={register({ required: true })}\n                />\n                {/* {errors.Email && <p>Require field</p>} */}\n              </label>\n              <label>\n                Email\n                <input\n                  type=\"text\"\n                  placeholder=\"Email\"\n                  name=\"Email\"\n                  ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\n                />\n                {/* {errors.Email && <p>Require field</p>} */}\n              </label>\n              <label>\n                Password\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  name=\"Password\"\n                  ref={register({ required: true, minLength: 6 })}\n                />\n                {/* {errors.Password && <p>Require field</p>} */}\n              </label>\n              {/* <label>Repeat Password */}\n              {/*    <input type=\"password\" placeholder=\"Repeat Password\" name=\"RepeatPassword\" */}\n              {/*           ref={register({required: true, minLength: 6})}/> */}\n              {/*    /!*{errors.Password && <p>Require field</p>}*!/ */}\n              {/* </label> */}\n\n              <button className={mainClasses.button} data-testid=\"sign-up\" type=\"submit\">\n                Sign Up\n              </button>\n            </form>\n\n            <p className={mainClasses.footerParagraph}>\n              Already have an account?\n              <NavLink className={mainClasses.footerLink} to={ROUTER.SIGN_IN}>\n                Sign in now\n              </NavLink>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport * as ROUTES from '../constants/routes'\n\nconst isUserExist = (user) => user.userId && user.userId.length > 0\n\nexport function IsUserRedirect({ user, loggedInPath, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={() => {\n        if (isUserExist(user)) {\n          return <Redirect to={{ pathname: loggedInPath }} />\n        }\n        if (!isUserExist(user)) {\n          return children\n        }\n        return null\n      }}\n    />\n  )\n}\n\nexport function ProtectedRoute({ user, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        if (isUserExist(user)) {\n          return children\n        }\n        if (!isUserExist(user)) {\n          return (\n            <Redirect\n              to={{\n                pathname: ROUTES.SIGN_IN,\n                state: { from: location },\n              }}\n            />\n          )\n        }\n        return null\n      }}\n    />\n  )\n}\n","import React, { useEffect } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport classes from './HomePage.module.scss'\nimport * as ROUTES from '../../../constants/routes'\nimport mainClasses from '../mainStylesForPages.module.scss'\nimport { Logo } from '../../UI/Logo/Logo'\n\nexport const HomePage: React.FC = () => {\n  useEffect(() => {\n    document.title = `BOO—BOO: Home`\n  })\n\n  return (\n    <div className={mainClasses.mainWrapper} data-testid=\"home-page\">\n      <div className={classes.homePageBody}>\n        <header className={classes.header}>\n          <Logo />\n          <nav className={classes.navList}>\n            <ul className={classes.navListUl}>\n              <li className={classes.navListElement}>\n                <NavLink to={ROUTES.SIGN_IN}>Sign In</NavLink>\n              </li>\n              <li className={`${classes.navListElement} ${classes.navListElement__mainColored}`}>\n                <NavLink to={ROUTES.SIGN_UP}>Sign Up</NavLink>\n              </li>\n            </ul>\n          </nav>\n        </header>\n        <div>\n          <h1 className={classes.headerTitle}>{`Keep an eye\\n on your tasks.`}</h1>\n          <div className={classes.getStartedContainer}>\n            <NavLink className={classes.getStarted} to={ROUTES.SIGN_IN}>\n              Get started\n            </NavLink>\n          </div>\n        </div>\n\n        <div className={classes.manImage} />\n      </div>\n    </div>\n  )\n}\n","import { ProjectI, ProjectsStateI } from './projects-types'\n\nexport const getActiveProject = (state: ProjectsStateI): string => state.projects.activeProject\nexport const getAllProjects = (state: ProjectsStateI): Array<ProjectI> => state.projects.allProjects\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport classes from './ProjectOverlay.module.scss'\nimport { getAllProjects } from '../../redux/projects/projects-selectors'\nimport { ProjectsStateI } from '../../redux/projects/projects-types'\n\ninterface ProjectOverlayPropsI {\n  setProject: (value: string) => void\n  showProjectOverlay: boolean\n  setShowProjectOverlay: (value: boolean) => void\n}\n\nexport const ProjectOverlay: React.FC<ProjectOverlayPropsI> = ({\n  setProject,\n  showProjectOverlay,\n  setShowProjectOverlay,\n}) => {\n  const projects = useSelector((state: ProjectsStateI) => getAllProjects(state))\n\n  return (\n    <>\n      {projects && showProjectOverlay && (\n        <div className={classes.projectOverlay} data-testid=\"project-overlay\">\n          <ul className={classes.overlayList}>\n            {projects.map((project) => (\n              <li className={classes.listItem} key={project.projectId}>\n                <div\n                  className={classes.listElement}\n                  data-testid=\"project-overlay-action\"\n                  onClick={() => {\n                    setProject(project.projectId)\n                    setShowProjectOverlay(false)\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') {\n                      setProject(project.projectId)\n                      setShowProjectOverlay(false)\n                    }\n                  }}\n                  role=\"button\"\n                  tabIndex={0}\n                  aria-label=\"Select the task project\"\n                >\n                  {project.name}\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </>\n  )\n}\n","import React from 'react'\nimport dayjs from 'dayjs'\nimport { FaRegPaperPlane, FaSpaceShuttle, FaSun } from 'react-icons/fa'\nimport classes from './TaskDate.module.scss'\n\ninterface TaskDatePropsI {\n  setShowTaskDate: (value: boolean) => void\n  setTaskDate: (value: string) => void\n  showTaskDate: boolean\n}\n\nexport const TaskDate: React.FC<TaskDatePropsI> = ({\n  setShowTaskDate,\n  setTaskDate,\n  showTaskDate,\n}) => (\n  <>\n    {showTaskDate && (\n      <div className={classes.taskDate} data-testid=\"task-date-overlay\">\n        <ul className={classes.list}>\n          <li className={classes.listItem}>\n            <div\n              className={classes.listItemElement}\n              aria-label=\"Select today as the task date\"\n              onClick={() => {\n                setShowTaskDate(false)\n                setTaskDate(dayjs().format('DD/MM/YYYY'))\n              }}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  setShowTaskDate(false)\n                  setTaskDate(dayjs().format('DD/MM/YYYY'))\n                }\n              }}\n              role=\"button\"\n              data-testid=\"task-date-today\"\n              tabIndex={0}\n            >\n              <span>\n                <FaSpaceShuttle />\n              </span>\n              <span>Today</span>\n            </div>\n          </li>\n\n          <li className={classes.listItem}>\n            <div\n              className={classes.listItemElement}\n              aria-label=\"Select tomorrow as the task date\"\n              onClick={() => {\n                setShowTaskDate(false)\n                setTaskDate(dayjs().add(1, 'day').format('DD/MM/YYYY'))\n              }}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  setShowTaskDate(false)\n                  setTaskDate(dayjs().add(1, 'day').format('DD/MM/YYYY'))\n                }\n              }}\n              role=\"button\"\n              tabIndex={0}\n              data-testid=\"task-date-tomorrow\"\n            >\n              <span>\n                <FaSun />\n              </span>\n              <span>Tomorrow</span>\n            </div>\n          </li>\n\n          <li className={classes.listItem}>\n            <div\n              className={classes.listItemElement}\n              aria-label=\"Select next week as the task date\"\n              onClick={() => {\n                setShowTaskDate(false)\n                setTaskDate(dayjs().add(7, 'day').format('DD/MM/YYYY'))\n              }}\n              onKeyDown={(e) => {\n                if (e.key === 'Enter') {\n                  setShowTaskDate(false)\n                  setTaskDate(dayjs().add(7, 'day').format('DD/MM/YYYY'))\n                }\n              }}\n              role=\"button\"\n              tabIndex={0}\n              data-testid=\"task-date-next-week\"\n            >\n              <span>\n                <FaRegPaperPlane />\n              </span>\n              <span>Next week</span>\n            </div>\n          </li>\n        </ul>\n      </div>\n    )}\n  </>\n)\n","import React from 'react'\nimport classes from './Button.module.scss'\nimport { ButtonPropsI } from './index'\n\nexport const Button: React.FC<ButtonPropsI> = ({ onClick, label, dataTestId, color }) => (\n  <button\n    className={`${classes.mainBtn} ${classes[color]}`}\n    type=\"button\"\n    onClick={() => onClick()}\n    data-testid={dataTestId}\n  >\n    {label}\n  </button>\n)\n","import { ThunkAction } from 'redux-thunk'\nimport { Action } from '@reduxjs/toolkit'\nimport { tasksAPI } from '../../api/api'\nimport {\n  addTaskActionCreatorI,\n  archivedTaskActionCreatorI,\n  deleteTaskActionCreatorI,\n  setAllTasksActionCreatorI,\n  TaskI,\n  TasksActionCreatorType,\n  TasksI,\n  TasksStateI,\n} from './tasks-types'\n\nconst initialState: TasksI = {\n  allTasks: [],\n}\n\nexport const SET_TASKS = 'SET_TASKS'\nexport const ADD_TASK = 'ADD_TASK'\nexport const ARCHIVED_TASK = 'ARCHIVED_TASK'\nexport const DELETE_TASK = 'DELETE_TASK'\n\nexport const archivedTaskHandler = (tasks: Array<TaskI>, taskId: Array<TaskI> | TaskI | string) =>\n  tasks.map((task) => {\n    if (task.id !== taskId) {\n      return { ...task }\n    }\n    return {\n      ...task,\n      archived: true,\n    }\n  })\n\nexport const tasksReducer = (state = initialState, action: TasksActionCreatorType): TasksI => {\n  const { type, payload } = action\n\n  switch (type) {\n    case SET_TASKS: {\n      return { ...state, allTasks: payload } as TasksI\n    }\n    case ADD_TASK: {\n      return { ...state, allTasks: [...state.allTasks, payload] } as TasksI\n    }\n    case ARCHIVED_TASK: {\n      return { ...state, allTasks: archivedTaskHandler(state.allTasks, payload) } as TasksI\n    }\n    case DELETE_TASK: {\n      return { ...state, allTasks: state.allTasks.filter((task) => task.docId !== payload) }\n    }\n    default:\n      return state\n  }\n}\n\nexport const setAllTasks = (tasks: Array<TaskI>): setAllTasksActionCreatorI => ({\n  type: SET_TASKS,\n  payload: tasks,\n})\n\nexport const addTask = (task: TaskI): addTaskActionCreatorI => ({ type: ADD_TASK, payload: task })\n\nexport const archivedTask = (taskId: string): archivedTaskActionCreatorI => ({\n  type: ARCHIVED_TASK,\n  payload: taskId,\n})\n\nexport const deleteTask = (taskId: string): deleteTaskActionCreatorI => ({\n  type: DELETE_TASK,\n  payload: taskId,\n})\n\nexport const getAllTasksTC = (\n  userId: string\n): ThunkAction<void, TasksStateI, unknown, Action> => async (dispatch) => {\n  await tasksAPI.getAllTasksById(userId).then((snapshot) => {\n    const allTasks = snapshot.docs.map((task) => {\n      const data = task.data()\n      return {\n        task: data.task,\n        createDate: data.createDate,\n        date: data.date,\n        archived: data.archived,\n        userId: data.userId,\n        projectId: data.projectId,\n        id: task.id,\n        docId: task.id,\n      }\n    })\n\n    const sortTasks = allTasks.sort((a, b) => a.createDate - b.createDate)\n    dispatch(setAllTasks(sortTasks))\n  })\n}\n\nexport const addTaskTC = (task: TaskI): ThunkAction<void, TasksStateI, unknown, Action> => async (\n  dispatch\n) => {\n  dispatch(addTask(task))\n  await tasksAPI.addTask(task).then(() => {\n    dispatch(getAllTasksTC(task.userId))\n  })\n}\n\nexport const archiveTaskTC = (\n  taskId: string\n): ThunkAction<void, TasksStateI, unknown, Action> => async (dispatch) => {\n  await tasksAPI.archivedTasksById(taskId)\n  dispatch(archivedTask(taskId))\n}\n\nexport const deleteTaskTC = (\n  taskId: string\n): ThunkAction<void, TasksStateI, unknown, Action> => async (dispatch) => {\n  await tasksAPI.deleteTask(taskId)\n  dispatch(deleteTask(taskId))\n}\n","import React, { useCallback, useState } from 'react'\nimport { FaRegListAlt, FaRegCalendarAlt, FaRegTimesCircle } from 'react-icons/fa'\nimport dayjs from 'dayjs'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { VscAdd } from 'react-icons/vsc'\nimport classes from './AddTask.module.scss'\nimport { ProjectOverlay } from '../ProjectOverlay/ProjectOverlay'\nimport { TaskDate } from '../TaskDate/TaskDate'\nimport { Button } from '../UI/Button/Button'\nimport { getActiveProject } from '../../redux/projects/projects-selectors'\nimport { addTaskTC } from '../../redux/tasks/tasks-reducer'\nimport { getUserId } from '../../redux/auth/auth-selectors'\nimport { ProjectsStateI } from '../../redux/projects/projects-types'\nimport { AuthStateI } from '../../redux/auth/auth-types'\n\ninterface AddTaskPropsI {\n  showAddTaskMain?: boolean\n  showShouldMain?: boolean\n  showQuickAddTask?: boolean\n  setShowQuickAddTask?: (value: boolean) => void\n}\n\nexport const AddTask: React.FC<AddTaskPropsI> = ({\n  showAddTaskMain = true,\n  showShouldMain = false,\n  showQuickAddTask = false,\n  setShowQuickAddTask,\n}) => {\n  const [taskName, setTaskName] = useState<string>('')\n  const [taskDate, setTaskDate] = useState<string>('')\n  const [project, setProject] = useState<string>('')\n  const [showAddTaskInput, setShowAddTaskInput] = useState<boolean>(showShouldMain)\n  const [showProjectOverlay, setShowProjectOverlay] = useState<boolean>(false)\n  const [showTaskDate, setShowTaskDate] = useState<boolean>(false)\n\n  const dispatch = useDispatch()\n  const selectedProject = useSelector((state: ProjectsStateI) => getActiveProject(state))\n  const userId = useSelector((state: AuthStateI) => getUserId(state))\n  const addTaskHandler = useCallback((task) => dispatch(addTaskTC(task)), [dispatch])\n\n  const getTaskObject = () => {\n    const projectId = project || selectedProject\n\n    let collatedDate = ''\n    if (projectId === 'TODAY') {\n      collatedDate = dayjs().format('DD/MM/YYYY')\n    } else if (projectId === 'NEXT_7') {\n      collatedDate = dayjs().add(7, 'day').format('DD/MM/YYYY')\n    }\n\n    return (\n      taskName &&\n      projectId &&\n      addTaskHandler({\n        archived: false,\n        projectId,\n        createDate: Date.now(),\n        task: taskName,\n        date: collatedDate || taskDate,\n        userId,\n      })\n    )\n  }\n\n  const addTask = () => {\n    setTaskName('')\n    setProject('')\n    setShowAddTaskInput(false)\n    setShowProjectOverlay(false)\n\n    return showQuickAddTask && setShowQuickAddTask\n      ? getTaskObject() && setShowQuickAddTask(false)\n      : getTaskObject()\n  }\n\n  return (\n    <div\n      className={showQuickAddTask ? classes.overlay : classes.addTask}\n      data-testid=\"add-task-comp\"\n    >\n      {showAddTaskMain && !showAddTaskInput && (\n        <div\n          className={classes.shallow}\n          data-testid=\"show-main-action\"\n          onClick={() => setShowAddTaskInput(!showAddTaskInput)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') setShowAddTaskInput(!showAddTaskInput)\n          }}\n          tabIndex={0}\n          aria-label=\"Add task\"\n          role=\"button\"\n        >\n          <span className={classes.plus}>\n            <VscAdd />\n          </span>\n          <span className={classes.text}>Add Task</span>\n        </div>\n      )}\n\n      {(showAddTaskInput || showQuickAddTask) && (\n        <div className={classes.main} data-testid=\"add-task-main\">\n          {/* Quick Add Task */}\n          {showQuickAddTask !== undefined && setShowQuickAddTask !== undefined && (\n            <>\n              <div data-testid=\"quick-add-task\">\n                <h2 className={classes.title}>Quick Add Task</h2>\n                <span\n                  className={classes.cancelX}\n                  data-testid=\"add-task-quick-cancel\"\n                  aria-label=\"Cancel adding task\"\n                  onClick={() => {\n                    setTaskName('')\n                    setShowAddTaskInput(false)\n                    setShowProjectOverlay(false)\n                    setShowQuickAddTask(false)\n                  }}\n                  onKeyDown={(e) => {\n                    if (e.key === 'Enter') {\n                      setTaskName('')\n                      setShowAddTaskInput(false)\n                      setShowProjectOverlay(false)\n                      setShowQuickAddTask(false)\n                    }\n                  }}\n                  tabIndex={0}\n                  role=\"button\"\n                >\n                  <FaRegTimesCircle />\n                </span>\n              </div>\n            </>\n          )}\n          <div className={classes.taskProjectOverlay}>\n            <ProjectOverlay\n              setProject={setProject}\n              showProjectOverlay={showProjectOverlay}\n              setShowProjectOverlay={setShowProjectOverlay}\n            />\n          </div>\n          <div className={classes.taskDateOverlay}>\n            <TaskDate\n              setTaskDate={setTaskDate}\n              showTaskDate={showTaskDate}\n              setShowTaskDate={setShowTaskDate}\n            />\n          </div>\n          <input\n            className={classes.content}\n            aria-label=\"Enter your task\"\n            data-testid=\"add-task-content\"\n            type=\"text\"\n            value={taskName}\n            onChange={(e) => setTaskName(e.target.value)}\n          />\n          <Button\n            onClick={() => addTask()}\n            label=\"Add Task\"\n            color=\"primary\"\n            dataTestId=\"add-task\"\n          />\n\n          {!showQuickAddTask && (\n            <span className={classes.buttonCancel}>\n              <Button\n                onClick={() => {\n                  setTaskName('')\n                  setShowAddTaskInput(false)\n                  setShowProjectOverlay(false)\n                }}\n                label=\"Cancel\"\n                color=\"transparent\"\n                dataTestId=\"add-task-main-cancel\"\n              />\n            </span>\n          )}\n\n          <span\n            className={classes.project}\n            data-testid=\"show-project-overlay\"\n            onClick={() => setShowProjectOverlay(!showProjectOverlay)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') setShowProjectOverlay(!showProjectOverlay)\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <FaRegListAlt />\n          </span>\n          <span\n            className={classes.date}\n            data-testid=\"show-task-date-overlay\"\n            onClick={() => setShowTaskDate(!showTaskDate)}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') setShowTaskDate(!showTaskDate)\n            }}\n            tabIndex={0}\n            role=\"button\"\n          >\n            <FaRegCalendarAlt />\n          </span>\n        </div>\n      )}\n    </div>\n  )\n}\n","import { AuthStateI, UserI } from './auth-types'\n\nexport const getUserId = (state: AuthStateI): string => state.auth.user.userId\nexport const getUser = (state: AuthStateI): UserI => state.auth.user\n","import React, { useCallback, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { VscAdd, VscExtensions, VscSignOut } from 'react-icons/vsc'\nimport classes from './Header.module.scss'\nimport { AddTask } from '../../AddTask/AddTask'\nimport { signOutTC } from '../../../redux/auth/auth-reducer'\n\n// interface HeaderPropsI {\n// darkMode: boolean\n// setDarkMode: (darkMode: boolean) => void\n// }\n\nexport const Header: React.FC = () => {\n  const [shouldShowMain, setShouldShowMain] = useState<boolean>(false)\n  const [showQuickAddTask, setShowQuickAddTask] = useState<boolean>(false)\n\n  const dispatch = useDispatch()\n  const signOutHandler = useCallback(() => dispatch(signOutTC()), [dispatch])\n\n  return (\n    <header className={classes.header} data-testid=\"header\">\n      <nav className={classes.navigation}>\n        <div className={classes.burger} aria-label=\"Close/Open sidebar\">\n          <button className={classes.headerBtn} data-testid=\"Close/Open sidebar\" type=\"button\">\n            <VscExtensions />\n          </button>\n        </div>\n        <div className={classes.settings}>\n          <ul>\n            <li aria-label=\"Quick add task\" className={classes.settingsItem}>\n              <button\n                type=\"button\"\n                data-testid=\"quick-add-task-action\"\n                className={classes.headerBtn}\n                onClick={() => {\n                  setShowQuickAddTask(true)\n                  setShouldShowMain(true)\n                }}\n              >\n                <VscAdd />\n              </button>\n            </li>\n            {/* <li aria-label=\"Toggle dark mode\" className={classes.settingsItem}> */}\n            {/*  <button */}\n            {/*    type=\"button\" */}\n            {/*    data-testid=\"dark-mode-action\" */}\n            {/*    className={classes.headerBtn} */}\n            {/*    onClick={() => setDarkMode(!darkMode)} */}\n            {/*  > */}\n            {/*    <VscColorMode /> */}\n            {/*  </button> */}\n            {/* </li> */}\n            <li aria-label=\"Sign out\" className={classes.settingsItem}>\n              <button\n                type=\"button\"\n                className={classes.headerBtn}\n                data-testid=\"sign-out\"\n                onClick={signOutHandler}\n              >\n                <VscSignOut />\n              </button>\n            </li>\n          </ul>\n        </div>\n      </nav>\n\n      <AddTask\n        showAddTaskMain={false}\n        showShouldMain={shouldShowMain}\n        showQuickAddTask={showQuickAddTask}\n        setShowQuickAddTask={setShowQuickAddTask}\n      />\n    </header>\n  )\n}\n","export const INBOX = 'INBOX'\nexport const TODAY = 'TODAY'\nexport const NEXT_7 = 'NEXT_7'\n","import { ThunkAction } from 'redux-thunk'\nimport { Action } from '@reduxjs/toolkit'\nimport { INBOX } from '../../constants/defaultProjects'\nimport { projectsAPI } from '../../api/api'\nimport {\n  ProjectI,\n  ProjectsI,\n  setActiveProjectActionCreatorI,\n  setAllProjectsActionCreatorI,\n  setAddProjectActionCreatorI,\n  deleteProjectActionCreatorI,\n  ProjectsStateI,\n  ProjectsActionCreatorsType,\n} from './projects-types'\n\nexport const SET_ACTIVE_PROJECT = 'SET_ACTIVE_PROJECT'\nexport const SET_ALL_PROJECTS = 'SET_ALL_PROJECTS'\nexport const ADD_PROJECT = 'ADD_PROJECT'\nexport const DELETE_PROJECT = 'DELETE_PROJECT'\n\nexport const initialState: ProjectsI = {\n  activeProject: INBOX,\n  allProjects: [],\n}\n\nexport const projectsReducer = (\n  state = initialState,\n  action: ProjectsActionCreatorsType\n): ProjectsI => {\n  const { type, payload } = action\n\n  switch (type) {\n    case SET_ACTIVE_PROJECT: {\n      return {\n        ...state,\n        activeProject: payload,\n      } as ProjectsI\n    }\n    case SET_ALL_PROJECTS: {\n      return {\n        ...state,\n        allProjects: payload,\n      } as ProjectsI\n    }\n    case ADD_PROJECT: {\n      return {\n        ...state,\n        allProjects: [...state.allProjects, payload],\n      } as ProjectsI\n    }\n    case DELETE_PROJECT: {\n      return {\n        ...state,\n        allProjects: state.allProjects.filter((project) => project.docId !== payload),\n      } as ProjectsI\n    }\n    default:\n      return state\n  }\n}\n\nexport const setActiveProject = (projectId: string): setActiveProjectActionCreatorI => ({\n  type: SET_ACTIVE_PROJECT,\n  payload: projectId,\n})\nexport const setAllProjects = (projects: Array<ProjectI>): setAllProjectsActionCreatorI => ({\n  type: SET_ALL_PROJECTS,\n  payload: projects,\n})\nexport const addProject = (project: ProjectI): setAddProjectActionCreatorI => ({\n  type: ADD_PROJECT,\n  payload: project,\n})\nexport const deleteProject = (docId: string): deleteProjectActionCreatorI => ({\n  type: DELETE_PROJECT,\n  payload: docId,\n})\n\nexport const getAllProjectTC = (\n  userId: string\n): ThunkAction<void, ProjectsStateI, unknown, Action> => async (dispatch) => {\n  await projectsAPI.getAllProjectsById(userId).then((snapshot) => {\n    const allProjects: Array<ProjectI> = snapshot.docs.map((project) => {\n      const data = project.data()\n      return {\n        userId: data.userId,\n        projectId: project.id,\n        name: data.name,\n        docId: project.id,\n      }\n    })\n    dispatch(setAllProjects(allProjects))\n  })\n}\n\nexport const addProjectTC = (\n  project: ProjectI\n): ThunkAction<void, ProjectsStateI, unknown, Action> => async (dispatch) => {\n  dispatch(addProject(project))\n  await projectsAPI.addProject({ ...project }).then(() => {\n    dispatch(getAllProjectTC(project.userId))\n  })\n}\n\nexport const deleteProjectTC = (\n  docId: string,\n  userId: string\n): ThunkAction<void, ProjectsStateI, unknown, Action> => async (dispatch) => {\n  dispatch(deleteProject(docId))\n  await projectsAPI.deleteProject(docId).then(() => {\n    dispatch(getAllProjectTC(userId))\n  })\n}\n","import React from 'react'\nimport classes from './SmallModalWindow.module.scss'\nimport { Button } from '../Button/Button'\n\ninterface SmallModalWindowPropsI {\n  description: string\n  deleteTask: () => void\n  onClose: () => void\n}\n\nexport const SmallModalWindow: React.FC<SmallModalWindowPropsI> = ({\n  description,\n  deleteTask,\n  onClose,\n}) => (\n  <div className={classes.modal} data-testid=\"small-modal-window\">\n    <p className={classes.title}>{description}</p>\n    <div className={classes.buttons}>\n      <Button\n        onClick={() => {\n          deleteTask()\n        }}\n        label=\"Delete\"\n        color=\"primary\"\n        dataTestId=\"small-modal-window-delete\"\n      />\n      <Button\n        onClick={() => onClose()}\n        label=\"Cancel\"\n        color=\"transparent\"\n        dataTestId=\"small-modal-window-cancel\"\n      />\n    </div>\n  </div>\n)\n","import React, { useCallback, useRef, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { VscKebabVertical } from 'react-icons/vsc'\nimport classes from './IndividualProject.module.scss'\nimport { INBOX } from '../../constants/defaultProjects'\nimport { deleteProjectTC, setActiveProject } from '../../redux/projects/projects-reducer'\nimport { getActiveProject } from '../../redux/projects/projects-selectors'\nimport { ProjectI, ProjectsStateI } from '../../redux/projects/projects-types'\nimport { useOutsideClick } from '../../hooks/useOutSideClick'\nimport { SmallModalWindow } from '../UI/SmallModalWindow/SmallModalWindow'\n\ninterface IndividualProjectPropsI {\n  project: ProjectI\n}\n\nexport const IndividualProject: React.FC<IndividualProjectPropsI> = ({ project }) => {\n  const [showConfirm, setShowConfirm] = useState<boolean>(false)\n  const deleteModalRef = useRef(null)\n  const activeProject = useSelector((state: ProjectsStateI) => getActiveProject(state))\n\n  const dispatch = useDispatch()\n  const selectProject = useCallback((id) => dispatch(setActiveProject(id)), [dispatch])\n  const deleteProject = useCallback((id, userId) => dispatch(deleteProjectTC(id, userId)), [\n    dispatch,\n  ])\n\n  const toggleDeleteModal = () => {\n    setShowConfirm(!showConfirm)\n  }\n\n  useOutsideClick(deleteModalRef, showConfirm, toggleDeleteModal)\n\n  return (\n    <>\n      <li\n        key={project.projectId}\n        className={`${classes.project} ${\n          activeProject === project.projectId ? classes.active : ''\n        }`}\n        data-testid=\"project-action-parent\"\n      >\n        <div className={classes.projectAction}>\n          <div\n            className={classes.projectItem}\n            data-testid=\"project-action\"\n            aria-label={`Select ${project.name} as the task project`}\n            role=\"button\"\n            data-doc-id={project.docId}\n            tabIndex={0}\n            onClick={() => {\n              selectProject(project.projectId)\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                selectProject(project.projectId)\n              }\n            }}\n          >\n            <span className={classes.dot}>•</span>\n            <span>{project.name}</span>\n          </div>\n          <div\n            className={classes.delete}\n            data-testid=\"delete-project\"\n            onClick={() => toggleDeleteModal()}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') toggleDeleteModal()\n            }}\n            tabIndex={0}\n            role=\"button\"\n            aria-label=\"Confirm deletion of project\"\n          >\n            <VscKebabVertical />\n            {showConfirm && (\n              <div className={classes.deleteModal} ref={deleteModalRef}>\n                <SmallModalWindow\n                  description=\"Are you sure you want to delete this project?\"\n                  deleteTask={() => {\n                    deleteProject(project.docId, project.userId)\n                    selectProject(INBOX)\n                  }}\n                  onClose={() => setShowConfirm(false)}\n                />\n              </div>\n            )}\n          </div>\n        </div>\n      </li>\n    </>\n  )\n}\n","import { useCallback, useEffect } from 'react'\n\nexport const useOutsideClick = (ref: any, display: boolean, callback: () => void) => {\n  const handleClick = useCallback(\n    (e: Event) => {\n      if (ref.current && !ref.current.contains(e.target)) {\n        callback()\n      }\n    },\n    [callback, ref]\n  )\n\n  useEffect(() => {\n    if (display) {\n      document.addEventListener('mousedown', handleClick)\n    } else {\n      document.removeEventListener('mousedown', handleClick)\n    }\n    return () => {\n      document.removeEventListener('mousedown', handleClick)\n    }\n  }, [display, handleClick])\n}\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { v4 as uuid } from 'uuid'\nimport { IndividualProject } from '../IndividualProject/IndividualProject'\nimport { getAllProjects } from '../../redux/projects/projects-selectors'\nimport { ProjectsStateI } from '../../redux/projects/projects-types'\n\nexport const Projects: React.FC = () => {\n  const projects = useSelector((state: ProjectsStateI) => getAllProjects(state))\n\n  return (\n    <div data-testid=\"all-projects\">\n      {projects && projects.map((project) => <IndividualProject key={uuid()} project={project} />)}\n    </div>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { v4 as uuid } from 'uuid'\nimport { VscAdd } from 'react-icons/vsc'\nimport classes from './AddProject.module.scss'\nimport { Button } from '../UI/Button/Button'\nimport { addProjectTC } from '../../redux/projects/projects-reducer'\nimport { ProjectI } from '../../redux/projects/projects-types'\n\ninterface AddProjectPropsI {\n  shouldShow?: boolean\n  userId: string\n}\n\nexport const AddProject: React.FC<AddProjectPropsI> = ({ shouldShow = false, userId }) => {\n  const [show, setShow] = useState<boolean>(shouldShow)\n  const [project, setProject] = useState<ProjectI>({\n    name: '',\n    userId,\n    projectId: '',\n  })\n  const dispatch = useDispatch()\n  const projectId = uuid()\n\n  const addProject = useCallback((item) => dispatch(addProjectTC(item)), [dispatch])\n\n  const handleAddProject = (item: ProjectI) => {\n    addProject(item)\n    setProject({ ...project, name: '' })\n    setShow(false)\n  }\n\n  return (\n    <div className={classes.wrapper} data-testid=\"add-project\">\n      {!show && (\n        <div\n          className={classes.addProject}\n          aria-label=\"Add Project\"\n          data-testid=\"add-project-action\"\n          onClick={() => setShow(true)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') setShow(true)\n          }}\n          role=\"button\"\n          tabIndex={0}\n        >\n          <span className={classes.plus}>\n            <VscAdd />\n          </span>\n          <span className={classes.text}>Add Project</span>\n        </div>\n      )}\n\n      {show && (\n        <>\n          <div className={classes.input} data-testid=\"add-project-inner\">\n            <input\n              value={project.name}\n              onChange={(e) => setProject({ ...project, name: e.target.value })}\n              className={classes.name}\n              data-testid=\"project-name\"\n              type=\"text\"\n              placeholder=\"Name your project\"\n            />\n          </div>\n\n          <div className={classes.buttons}>\n            <Button\n              color=\"primary\"\n              label=\"Add Project\"\n              onClick={() => handleAddProject({ ...project, projectId })}\n              dataTestId=\"add-project-submit\"\n            />\n            <Button\n              color=\"transparent\"\n              label=\"Cancel\"\n              onClick={() => setShow(false)}\n              dataTestId=\"hide-project-overlay\"\n            />\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport classes from './TaskCounter.module.scss'\n\ninterface TasksCounterPropsI {\n  count: number\n}\n\nexport const TasksCounter: React.FC<TasksCounterPropsI> = ({ count }) => (\n  <>\n    {count > 0 && (\n      <span data-testid=\"task-counter\" className={classes.counter}>\n        {count}\n      </span>\n    )}\n  </>\n)\n","import { createSelector } from 'reselect'\nimport { INBOX, NEXT_7, TODAY } from '../../constants/defaultProjects'\nimport { TaskI, TasksStateI } from './tasks-types'\n\nexport const getAllTasks = (state: TasksStateI): Array<TaskI> => state.tasks.allTasks\n\nexport const getNotArchivedTasks = createSelector(getAllTasks, (tasks: Array<TaskI>) =>\n  tasks.filter((task: TaskI) => !task.archived)\n)\n\nexport const getInboxTasksCounter = createSelector(\n  getNotArchivedTasks,\n  (tasks: Array<TaskI>) => tasks.filter((elem) => elem.projectId === INBOX).length\n)\n\nexport const getTodayTasksCounter = createSelector(\n  getNotArchivedTasks,\n  (tasks: Array<TaskI>) => tasks.filter((elem) => elem.projectId === TODAY).length\n)\n\nexport const getNext7TasksCounter = createSelector(\n  getNotArchivedTasks,\n  (tasks: Array<TaskI>) => tasks.filter((elem) => elem.projectId === NEXT_7).length\n)\n","import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { FaInbox, FaRegCalendarAlt, FaRegCalendar } from 'react-icons/fa'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { VscChevronDown } from 'react-icons/vsc'\nimport classes from './Sidebar.module.scss'\nimport { Projects } from '../../Projects/Projects'\nimport { AddProject } from '../../AddProject/AddProject'\nimport { INBOX, NEXT_7, TODAY } from '../../../constants/defaultProjects'\nimport { getActiveProject } from '../../../redux/projects/projects-selectors'\nimport { TasksCounter } from '../../UI/TasksCounter/TasksCounter'\nimport {\n  getInboxTasksCounter,\n  getNext7TasksCounter,\n  getTodayTasksCounter,\n} from '../../../redux/tasks/tasks-selectors'\nimport { getAllTasksTC } from '../../../redux/tasks/tasks-reducer'\nimport { getAllProjectTC, setActiveProject } from '../../../redux/projects/projects-reducer'\nimport { TasksStateI } from '../../../redux/tasks/tasks-types'\nimport { ProjectsStateI } from '../../../redux/projects/projects-types'\n\ninterface SidebarPropsI {\n  userId: string\n}\n\nexport const Sidebar: React.FC<SidebarPropsI> = ({ userId }) => {\n  const [showProjects, setShowProjects] = useState<boolean>(true)\n\n  const dispatch = useDispatch()\n  // Get all projects & tasks from back and set it in redux\n  const getAllProjects = useCallback(() => dispatch(getAllProjectTC(userId)), [dispatch, userId])\n  const getAllTasks = useCallback(() => dispatch(getAllTasksTC(userId)), [dispatch, userId])\n\n  const selectProject = useCallback((projectId) => dispatch(setActiveProject(projectId)), [\n    dispatch,\n  ])\n\n  const selectInboxTaskCountMemoized = useMemo(() => getInboxTasksCounter, [])\n  const selectTodayTaskCountMemoized = useMemo(() => getTodayTasksCounter, [])\n  const selectNext7TaskCountMemoized = useMemo(() => getNext7TasksCounter, [])\n\n  const inboxTaskCount = useSelector((state: TasksStateI) => selectInboxTaskCountMemoized(state))\n  const todayTaskCount = useSelector((state: TasksStateI) => selectTodayTaskCountMemoized(state))\n  const next7TaskCount = useSelector((state: TasksStateI) => selectNext7TaskCountMemoized(state))\n\n  const activeProject = useSelector((state: ProjectsStateI) => getActiveProject(state))\n  // const inboxTaskCount = useSelector((state) => getInboxTasksCounter(state))\n  // const todayTaskCount = useSelector((state) => getTodayTasksCounter(state))\n  // const next7TaskCount = useSelector((state) => getNext7TasksCounter(state))\n\n  useEffect(() => {\n    getAllProjects()\n    getAllTasks()\n  }, [dispatch, getAllProjects, getAllTasks])\n\n  return (\n    <div className={classes.sidebar} data-testid=\"sidebar\">\n      <ul className={classes.generic}>\n        <li data-testid=\"inbox\" className={activeProject === INBOX ? classes.active : ''}>\n          <div\n            aria-label=\"Show inbox tasks\"\n            data-testid=\"inbox-action\"\n            onClick={() => {\n              selectProject(INBOX)\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                selectProject(INBOX)\n              }\n            }}\n            role=\"button\"\n            tabIndex={0}\n          >\n            <span>\n              <FaInbox />\n            </span>\n            <span>Inbox</span>\n\n            <span className={classes.taskCounterContainer}>\n              <TasksCounter count={inboxTaskCount} />\n            </span>\n          </div>\n        </li>\n        <li data-testid=\"today\" className={activeProject === TODAY ? classes.active : ''}>\n          <div\n            aria-label=\"Show today`s tasks\"\n            data-testid=\"today-action\"\n            onClick={() => {\n              selectProject(TODAY)\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                selectProject(TODAY)\n              }\n            }}\n            role=\"button\"\n            tabIndex={0}\n          >\n            <span>\n              <span>\n                <FaRegCalendar />\n              </span>\n              <span>Today</span>\n              <span className={classes.taskCounterContainer}>\n                <TasksCounter count={todayTaskCount} />\n              </span>\n            </span>\n          </div>\n        </li>\n        <li data-testid=\"next_7\" className={activeProject === NEXT_7 ? classes.active : ''}>\n          <div\n            aria-label=\"Show tasks for the next 7 days\"\n            data-testid=\"next_7-action\"\n            onClick={() => {\n              selectProject(NEXT_7)\n            }}\n            onKeyDown={(e) => {\n              if (e.key === 'Enter') {\n                selectProject(NEXT_7)\n              }\n            }}\n            role=\"button\"\n            tabIndex={0}\n          >\n            <span>\n              <FaRegCalendarAlt />\n            </span>\n            <span>Next 7 days</span>\n            <span className={classes.taskCounterContainer}>\n              <TasksCounter count={next7TaskCount} />\n            </span>\n          </div>\n        </li>\n      </ul>\n\n      <div\n        className={classes.middle}\n        onClick={() => setShowProjects(!showProjects)}\n        onKeyDown={(e) => {\n          if (e.key === 'Enter') setShowProjects(!showProjects)\n        }}\n        aria-label={`${showProjects ? 'Hide' : 'Show'} projects`}\n        role=\"button\"\n        tabIndex={0}\n      >\n        <span className={classes.iconChevron}>\n          <VscChevronDown className={!showProjects ? classes.hiddenProject : ''} />\n        </span>\n        <h2>Projects</h2>\n      </div>\n\n      <ul className={classes.projects}>{showProjects && <Projects />}</ul>\n      {showProjects && <AddProject userId={userId} />}\n    </div>\n  )\n}\n","export interface collatedTaskI {\n  key: string\n  name: string\n}\n\nexport const collatedTasks = [\n  { key: 'INBOX', name: 'Inbox' },\n  { key: 'TODAY', name: 'Today' },\n  { key: 'NEXT_7', name: 'Next 7 Days' },\n]\n","import { collatedTaskI, collatedTasks } from '../constants/collatedTasks'\nimport { ProjectI } from '../redux/projects/projects-types'\n\nexport const getTitle = (projects: Array<ProjectI>, projectId: string): string => {\n  const object = projects.find((project) => project.projectId === projectId)\n  if (object !== undefined) {\n    return object.name\n  }\n  return ''\n}\n\nexport const getCollatedTitle = (projects: Array<collatedTaskI>, key: string): string => {\n  const object = projects.find((project) => project.key === key)\n  if (object !== undefined) {\n    return object.name\n  }\n  return ''\n}\n\nexport const collatedTasksExist = (selectedProject: string): collatedTaskI | undefined =>\n  collatedTasks.find((task) => task.key === selectedProject)\n\nexport const getUser = () => JSON.parse(<string>localStorage.getItem('authUser'))\n","import React, { useCallback, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { VscCheck } from 'react-icons/vsc'\nimport classes from './Checkbox.module.scss'\nimport { CheckboxPropsI } from './index'\nimport { archiveTaskTC } from '../../../redux/tasks/tasks-reducer'\n\nexport const Checkbox: React.FC<CheckboxPropsI> = ({ id, taskDesc }) => {\n  const [mouseEnter, setMouseEnter] = useState<boolean>(false)\n  const [checked, setChecked] = useState<boolean>(false)\n  const dispatch = useDispatch()\n  const archiveTask = useCallback((taskId) => dispatch(archiveTaskTC(taskId)), [dispatch])\n\n  const handleArchiveTask = (taskId: string) => {\n    setChecked(true)\n    setTimeout(() => archiveTask(taskId), 300)\n  }\n\n  return (\n    <div\n      className={classes.checkboxHolder}\n      data-testid=\"checkbox-action\"\n      onClick={() => handleArchiveTask(id)}\n      onKeyDown={(e) => {\n        if (e.key === 'Enter') handleArchiveTask(id)\n      }}\n      aria-label={`Mark ${taskDesc} as done?`}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <span\n        className={`${classes.checkbox} ${checked && classes.checkboxChecked}`}\n        data-testid=\"checkbox-circle\"\n        onMouseEnter={() => setMouseEnter(true)}\n        onMouseOver={() => setMouseEnter(true)}\n        onMouseLeave={() => setMouseEnter(false)}\n      >\n        {(mouseEnter || checked) && (\n          <span data-testid=\"checkbox-icon\">\n            <VscCheck />\n          </span>\n        )}\n      </span>\n    </div>\n  )\n}\n","import React, { useCallback, useState } from 'react'\nimport { VscKebabVertical } from 'react-icons/vsc'\nimport { useDispatch } from 'react-redux'\nimport classes from './Task.module.scss'\nimport { Checkbox } from '../UI/Checkbox/Checkbox'\nimport { deleteTaskTC } from '../../redux/tasks/tasks-reducer'\nimport { SmallModalWindow } from '../UI/SmallModalWindow/SmallModalWindow'\n\ninterface TaskPropsI {\n  name: string\n  id: string\n}\n\nexport const Task: React.FC<TaskPropsI> = ({ name, id }) => {\n  const [isModalDisplay, setIsModalDisplay] = useState(false)\n\n  const dispatch = useDispatch()\n  const deleteTask = useCallback((taskId: string) => dispatch(deleteTaskTC(taskId)), [dispatch])\n\n  return (\n    <>\n      <li data-testid=\"task\">\n        <div className={classes.taskBody}>\n          <Checkbox id={id} taskDesc={name} />\n          <span className={classes.name}>{name}</span>\n        </div>\n        <div\n          className={classes.kebab}\n          data-testid=\"task-kebab\"\n          role=\"button\"\n          tabIndex={0}\n          aria-label={`${isModalDisplay ? 'Close' : 'Open'} delete task \"${name}\" modal?`}\n          onClick={() => setIsModalDisplay(!isModalDisplay)}\n          onKeyDown={(e) => {\n            if (e.key === 'Enter') {\n              setIsModalDisplay(!isModalDisplay)\n            }\n          }}\n        >\n          <VscKebabVertical />\n          {isModalDisplay && (\n            <div className={classes.modal}>\n              <SmallModalWindow\n                description=\"Are you sure you want to delete this task?\"\n                deleteTask={() => deleteTask(id)}\n                onClose={() => setIsModalDisplay(false)}\n              />\n            </div>\n          )}\n        </div>\n      </li>\n    </>\n  )\n}\n","import React, { useEffect } from 'react'\nimport './Tasks.scss'\nimport { useSelector } from 'react-redux'\nimport { v4 as uuid } from 'uuid'\nimport { collatedTasks } from '../../constants/collatedTasks'\nimport { getTitle, getCollatedTitle, collatedTasksExist } from '../../helpers/helpers'\nimport { AddTask } from '../AddTask/AddTask'\nimport { getAllTasks } from '../../redux/tasks/tasks-selectors'\nimport { getActiveProject, getAllProjects } from '../../redux/projects/projects-selectors'\nimport { ProjectsStateI } from '../../redux/projects/projects-types'\nimport { TaskI, TasksStateI } from '../../redux/tasks/tasks-types'\nimport { Task } from '../Task/Task'\n\nexport const Tasks: React.FC = () => {\n  const selectedProject = useSelector((state: ProjectsStateI) => getActiveProject(state))\n  const projects = useSelector((state: ProjectsStateI) => getAllProjects(state))\n  const tasks = useSelector((state: TasksStateI) => getAllTasks(state))\n\n  const createProjectName = () => {\n    let name = ''\n    if (\n      projects &&\n      projects.length > 0 &&\n      selectedProject &&\n      !collatedTasksExist(selectedProject)\n    ) {\n      name = getTitle(projects, selectedProject)\n    }\n\n    if (collatedTasksExist(selectedProject) && selectedProject) {\n      name = getCollatedTitle(collatedTasks, selectedProject)\n    }\n\n    return name\n  }\n\n  const getFilteredTasks = (allTasks: Array<TaskI>, selectProjectId: string) =>\n    allTasks.filter((task: TaskI) => task.projectId === selectProjectId && !task.archived)\n\n  const projectName = createProjectName()\n  const selectedProjectTasks = getFilteredTasks(tasks, selectedProject)\n\n  useEffect(() => {\n    document.title = `BOO—BOO: ${projectName} tasks`\n  }, [projectName])\n\n  return (\n    <div className=\"tasks\" data-testid=\"tasks\">\n      <h2 data-testid=\"project-name\">{projectName}</h2>\n\n      {selectedProjectTasks.length > 0 && (\n        <ul className=\"tasks__list\">\n          {selectedProjectTasks.map((task) => (\n            <Task key={uuid()} name={task.task} id={task.id} />\n          ))}\n        </ul>\n      )}\n\n      <AddTask />\n\n      {selectedProjectTasks.length === 0 && (\n        <>\n          <div className=\"tasks__done\" />\n          <div className=\"tasks__done-text\" data-testid=\"task-not-found\">\n            All tasks are done! Nice work!\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n","import React from 'react'\nimport classes from './Content.module.scss'\nimport { Sidebar } from '../Sidebar/Sidebar'\nimport { Tasks } from '../../Tasks/Tasks'\n\ninterface ContentPropsI {\n  userId: string\n}\n\nexport const Content: React.FC<ContentPropsI> = ({ userId }) => (\n  <section className={classes.content} data-testid=\"content\">\n    <Sidebar userId={userId} />\n    <Tasks />\n  </section>\n)\n","import React from 'react'\nimport { Header } from '../../layout/Header/Header'\nimport { Content } from '../../layout/Content/Content'\n\ninterface BooBooPropsI {\n  userId: string\n}\n\nexport const BooBoo: React.FC<BooBooPropsI> = ({ userId }) => (\n  <>\n    <Header />\n    <Content userId={userId} />\n  </>\n)\n","import React from 'react'\nimport { BrowserRouter, Switch } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { SignIn } from '../components/pages/SignIn/SignIn'\nimport { SignUp } from '../components/pages/SignUp/SignUp'\nimport * as ROUTES from '../constants/routes'\nimport { IsUserRedirect, ProtectedRoute } from '../helpers/routes'\nimport { HomePage } from '../components/pages/HomePage/HomePage'\nimport { BooBoo } from '../components/pages/BooBoo/BooBoo'\nimport { getUser } from '../redux/auth/auth-selectors'\nimport { AuthStateI } from '../redux/auth/auth-types'\n\nexport const AppRouter: React.FC = () => {\n  const user = useSelector((state: AuthStateI) => getUser(state))\n\n  return (\n    <BrowserRouter>\n      <main data-testid=\"application\">\n        <Switch>\n          <IsUserRedirect user={user} loggedInPath={ROUTES.APP} path={ROUTES.SIGN_IN} exact>\n            <SignIn />\n          </IsUserRedirect>\n          <IsUserRedirect user={user} loggedInPath={ROUTES.APP} path={ROUTES.SIGN_UP} exact>\n            <SignUp />\n          </IsUserRedirect>\n          <ProtectedRoute user={user} path={ROUTES.APP} exact>\n            <BooBoo userId={user.userId} />\n          </ProtectedRoute>\n          <IsUserRedirect user={user} loggedInPath={ROUTES.APP} path={ROUTES.HOME} exact>\n            <HomePage />\n          </IsUserRedirect>\n        </Switch>\n      </main>\n    </BrowserRouter>\n  )\n}\n","import React, { useEffect } from 'react'\nimport './App.scss'\nimport 'normalize.css'\nimport { useDispatch } from 'react-redux'\nimport { AppRouter } from './routes/AppRouter'\nimport { authMeTC } from './redux/auth/auth-reducer'\n\nexport const App: React.FC = () => {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(authMeTC())\n  })\n\n  return <AppRouter />\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { authReducer } from './auth/auth-reducer'\nimport { projectsReducer } from './projects/projects-reducer'\nimport { tasksReducer } from './tasks/tasks-reducer'\n\nexport const reducer = {\n  auth: authReducer,\n  projects: projectsReducer,\n  tasks: tasksReducer,\n}\n\nexport const store = configureStore({ reducer })\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { App } from './App'\nimport { store } from './redux/redux-store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}